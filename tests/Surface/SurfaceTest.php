<?php


use CleantalkSP\SpbctWP\Scanner\ScanningStagesModule\ScanningStagesStorage;
use CleantalkSP\SpbctWP\Scanner\ScanningStagesModule\Stages\FileSystemAnalysis;
use CleantalkSP\SpbctWP\Scanner\Surface;

class TestSurface extends PHPUnit\Framework\TestCase
{
    private function initParams()
    {
        return array(
            'fast_hash'             => true,
            'full_hash'             => true,
            'offset'                => 0,
            'amount'                => 0,
            'extensions'            => 'php, html, htm, js, php2, php3, php4, php5, php6, php7, phtml, shtml, phar, odf, [ot.]',
            'extensions_exceptions' => '', //array('jpg', 'jpeg', 'png', 'gif', 'css', 'txt', 'zip', 'xml', 'json')
            'file_exceptions'       => 'wp-config.php',
            'files_mandatory'       => array(),
            'dir_exceptions'        => array(SPBC_PLUGIN_DIR . 'quarantine'),
            // important!
            'running_due_stage'     => false
        );
    }

    public function testSurfaceRoot()
    {
        $init_params = $this->initParams();
        $init_params['offset'] = 0;
        $init_params['amount'] = 700;
        $path_to_scan = __DIR__ . '/test_just_root_directory';

        $scanner = new Surface($path_to_scan, __DIR__, $init_params);
        $this->assertIsObject($scanner);
        $this->assertFalse($scanner->has_errors);
        $this->assertIsObject($scanner->last_iterator_result);
        $this->assertEquals(3, $scanner->output_files_count);
    }

    public function testSurfaceNotMuchDeep()
    {
        $init_params = $this->initParams();
        $init_params['offset'] = 0;
        $init_params['amount'] = 2;
        $path_to_scan = __DIR__ . '/test_deep_directory';

        $scanner = new Surface($path_to_scan, __DIR__, $init_params);
        $this->assertIsObject($scanner);
        $this->assertFalse($scanner->has_errors);
        $this->assertIsObject($scanner->last_iterator_result);
        $this->assertEquals(2, $scanner->output_files_count);
    }

    public function testSurfaceDeep()
    {
        $init_params = $this->initParams();
        $init_params['offset'] = 0;
        $init_params['amount'] = 15;
        $path_to_scan = __DIR__ . '/test_deep_directory';

        $scanner = new Surface($path_to_scan, __DIR__, $init_params);
        $this->assertIsObject($scanner);
        $this->assertFalse($scanner->has_errors);
        $this->assertIsObject($scanner->last_iterator_result);
        $this->assertEquals(15, $scanner->output_files_count);
    }
}
