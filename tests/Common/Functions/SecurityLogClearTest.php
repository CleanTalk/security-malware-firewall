<?php

use PHPUnit\Framework\TestCase;

class SecurityLogClearTest extends TestCase
{
    protected $wpdb;

    protected function setUp(): void
    {
        // Set up the test environment
        $db_tables_creator = new \CleantalkSP\SpbctWP\DB\TablesCreator();
        $db_tables_creator->createTable(SPBC_TBL_SECURITY_LOG);
        $this->wpdb = $this->createMock(\wpdb::class);
    }

    protected function tearDown(): void
    {
        // Tear down the test environment
        $this->wpdb->query("DROP TABLE IF EXISTS " . SPBC_TBL_SECURITY_LOG);
        unset($this->wpdb);
    }

    public function testSecurityLogClearRemovesOldEntries()
    {
        // Mock the database interactions
        $this->wpdb->expects($this->exactly(60))
                   ->method('insert')
                   ->with(SPBC_TBL_SECURITY_LOG, $this->anything());

        $this->wpdb->expects($this->once())
                   ->method('get_var')
                   ->with("SELECT COUNT(*) FROM " . SPBC_TBL_SECURITY_LOG)
                   ->willReturn(50);

        // Act: Call the function
        spbc_security_log_clear();

        // Assert: Only 50 entries should remain
        $remaining_entries = $this->wpdb->get_var("SELECT COUNT(*) FROM " . SPBC_TBL_SECURITY_LOG);
        $this->assertEquals(50, $remaining_entries);
    }

    public function testSecurityLogClearHandlesEmptyTable()
    {
        // Mock the database interactions
        $this->wpdb->expects($this->once())
                   ->method('get_var')
                   ->with("SELECT COUNT(*) FROM " . SPBC_TBL_SECURITY_LOG)
                   ->willReturn(0);

        // Act: Call the function
        spbc_security_log_clear();

        // Assert: Table should still be empty
        $remaining_entries = $this->wpdb->get_var("SELECT COUNT(*) FROM " . SPBC_TBL_SECURITY_LOG);
        $this->assertEquals(0, $remaining_entries);
    }

    public function testSecurityLogClearHandlesLessThan50Entries()
    {
        // Mock the database interactions
        $this->wpdb->expects($this->exactly(30))
                   ->method('insert')
                   ->with(SPBC_TBL_SECURITY_LOG, $this->anything());

        $this->wpdb->expects($this->once())
                   ->method('get_var')
                   ->with("SELECT COUNT(*) FROM " . SPBC_TBL_SECURITY_LOG)
                   ->willReturn(30);

        // Act: Call the function
        spbc_security_log_clear();

        // Assert: All 30 entries should remain
        $remaining_entries = $this->wpdb->get_var("SELECT COUNT(*) FROM " . SPBC_TBL_SECURITY_LOG);
        $this->assertEquals(30, $remaining_entries);
    }
}
