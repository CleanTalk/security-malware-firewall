<?php

use PHPUnit\Framework\TestCase;

class SecurityLogClearTest extends TestCase
{
    protected $wpdb;

    protected function setUp(): void
    {
        global $wpdb;

        // Set up the test environment
        $db_tables_creator = new \CleantalkSP\SpbctWP\DB\TablesCreator();
        $db_tables_creator->createTable(SPBC_TBL_SECURITY_LOG);
        $this->wpdb = $wpdb;
        $this->clearMockData();
    }

    protected function tearDown(): void
    {
        // Tear down the test environment
        $this->wpdb->query("DROP TABLE IF EXISTS " . SPBC_TBL_SECURITY_LOG);
        unset($this->wpdb);
    }

    protected function insertMockData($count = 60)
    {
        // Insert mock data into SPBC_TBL_SECURITY_LOG
        for ($i = 1; $i <= $count; $i++) {
            $this->wpdb->insert(
                SPBC_TBL_SECURITY_LOG,
                array(
                    'datetime' => current_time('mysql'),
                    'event' => 'mock_event_' . $i,
                    'sent' => 1
                )
            );
        }
    }

    protected function clearMockData()
    {
        $this->wpdb->query("DELETE FROM " . SPBC_TBL_SECURITY_LOG);
    }

    public function testSecurityLogClearRemovesOldEntries()
    {
        $this->insertMockData();

        $query = "SELECT COUNT(*) FROM " . SPBC_TBL_SECURITY_LOG;
        $initial_entries = $this->wpdb->get_var($query);
        $this->assertEquals(60, $initial_entries);

        // Act: Call the function
        spbc_security_log_clear();

        // Assert: Only 50 entries should remain
        $remaining_entries = $this->wpdb->get_var($query);
        $this->assertEquals(50, $remaining_entries);

        $this->clearMockData();
    }

    public function testSecurityLogClearHandlesEmptyTable()
    {
        $query = "SELECT COUNT(*) FROM " . SPBC_TBL_SECURITY_LOG;
        $initial_entries = $this->wpdb->get_var($query);
        $this->assertEquals(0, $initial_entries);

        // Act: Call the function
        spbc_security_log_clear();

        // Assert: Table should still be empty
        $remaining_entries = $this->wpdb->get_var("SELECT COUNT(*) FROM " . SPBC_TBL_SECURITY_LOG);
        $this->assertEquals(0, $remaining_entries);
    }

    public function testSecurityLogClearHandlesLessThan50Entries()
    {
        $this->insertMockData(30);

        $query = "SELECT COUNT(*) FROM " . SPBC_TBL_SECURITY_LOG;
        $initial_entries = $this->wpdb->get_var($query);
        $this->assertEquals(30, $initial_entries);

        // Act: Call the function
        spbc_security_log_clear();

        // Assert: All 30 entries should remain
        $remaining_entries = $this->wpdb->get_var("SELECT COUNT(*) FROM " . SPBC_TBL_SECURITY_LOG);
        $this->assertEquals(30, $remaining_entries);
    }
}
