<?php

namespace CleantalkSP\Templates;

trait Singleton{
	
	protected static $instance;
	
	public function __construct(){}
	public function __wakeup(){}
	public function __clone(){}
	
	/**
	 * Constructor
	 *
	 * @param null|array $params Additional parameters to pass in the init() method
	 *
	 * @return $this
	 */
	protected static function getInstance($params = null){
		if (!isset(static::$instance)) {
			static::$instance = new static;
			$params === null ? static::$instance->init(array()) : static::$instance->init(...$params);
		}
		return static::$instance;
	}
    
    /**
     * Alternative constructor
     *
     * @param null|array $params Parameters to initialize the instance
     */
    protected function init(...$params){}
	
}