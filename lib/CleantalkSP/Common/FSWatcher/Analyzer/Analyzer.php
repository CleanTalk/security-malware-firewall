<?php

namespace CleantalkSP\Common\FSWatcher\Analyzer;

use CleantalkSP\Common\FSWatcher\Logger;
use CleantalkSP\Common\FSWatcher\Controller;

class Analyzer
{
    public static function getCompareResult()
    {
        $first = filter_var($_POST['fswatcher__first_date'], FILTER_VALIDATE_INT);
        $second = filter_var($_POST['fswatcher__second_date'], FILTER_VALIDATE_INT);

        if ($first > $second) {
            $tmp = $first;
            $first = $second;
            $second = $tmp;
        }

        $first_journal = Controller::$storage::getJournal($first);
        $second_journal = Controller::$storage::getJournal($second);

        if (!$first_journal || !$second_journal) {
            return ['error' => 'No such journal'];
        }

        if (Controller::debug) {
            Logger::log('first journal ' . $first_journal);
            Logger::log('second journal ' . $second_journal);
        }

        return self::compare($first_journal, $second_journal);
    }

    private static function compare($first_journal, $second_journal)
    {
        $result = array(
            'added' => array(),
            'deleted' => array(),
            'changed' => array(),
        );

        $first_journal = self::uncompress($first_journal);
        $second_journal = self::uncompress($second_journal);

        $fp_first = fopen($first_journal, 'r');
        $fp_second = fopen($second_journal, 'r');

        // $flag = true;
        while ($first = fgetcsv($fp_first)) {
        // while ($flag) {
            // $first = fgetcsv($fp_first);
            if ($second = fgetcsv($fp_second)) {
                if ($first[0] !== $second[0]) {
                    $result['deleted'][] = $first;

                    // $flag = false;
                    continue;
                }

                if ($first === $second && $first[1] !== $second[1]) {
                    $result['changed'][] = $first;
                }
            } else {
                $result['deleted'][] = $first;
            }

            // $flag = false;
        }

        fclose($fp_first);
        fclose($fp_second);

        return $result;
    }

    private static function uncompress($file)
    {
        if (substr($file, -3) === '.gz') {
            $content = gzopen($file, 'r');
            file_put_contents(substr($file, 0, -3), gzread($content, 1024 * 1024 * 10));
            gzclose($content);
            $file = substr($file, 0, -3);
        }

        return $file;
    }
}
