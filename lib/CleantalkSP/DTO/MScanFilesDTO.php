<?php

namespace CleantalkSP\DTO;

class MScanFilesDTO extends DTO
{
    private $method_name;

    /**
     * mscanFilesDTO constructor.
     * Await for array of next data:
     * - auth_key:string, not empty;
     * - path_to_sfile:string, not empty;
     * - attached_sfile:string, not empty;
     * - md5sum_sfile:string, not empty;
     * - dangerous_code:array;
     * - version:string;
     * - source:string;
     * - source_type:string;
     * - source_status:string;
     * - real_hash:string;
     * @param $data array
     */
    public function __construct($data)
    {
        $this->method_name = 'security_mscan_files';
        $this->dto_awaited_keys_count = 11;
        $this->dto_awaited_keys = array(
            'auth_key',
            'path_to_sfile',
            'attached_sfile',
            'md5sum_sfile',
            'dangerous_code',
            'version',
            'source',
            'source_type',
            'source_status',
            'real_hash',
            $this->method_name
        );
        $this->default_data = false;
        $this->addClassToDefaultMsg(__CLASS__);
        parent::__construct($data);
    }

    public function transform()
    {
        $this->success = true;
        $this->data['method_name'] = $this->method_name;
        parent::transform();

        /**
         * You can place any additional checks and transformations there
         */

        $must_have_values = array(
            'auth_key',
            'path_to_sfile',
            'attached_sfile',
            'md5sum_sfile'
        );

        foreach ( $must_have_values as $value ) {
            if ( empty($this->data[$value]) ) {
                $this->success = false;
                $this->setError('value ' . $value);
            }
        }

        //chek if values are strings and throw error if is not
        $strict_string_keys = $must_have_values; //in case of this dto the are the same
        $this->strictCheckIsString($strict_string_keys);

        // dangerous code is array, check this
        $this->strictCheckIsArray(array('dangerous_code'));

        //converting to string if is not
        $values_to_convert = array(
            'version',
            'source',
            'source_type',
            'source_status',
            'real_hash',
        );
        $this->convertToString($values_to_convert);

        //final check DTO data keys
        $this->checkDTOKeysCount();

        if ( $this->success ) {
            return true;
        }

        return false;
    }
}
