<?php

namespace CleantalkSP\SpbctWP\ScanResultsLogModule;

class ScanResultsLogTemplate
{
    public function render()
    {
        echo $this->template();
    }

    public function template()
    {
        $scan_results_log_repository = new ScanResultsLogRepository();
        $rows = $scan_results_log_repository->getScanResultsLogRows();
        $template = '';

        if (count($rows) > 0) {
            $template = '<div id="spbcscan-results-log-module">';
            $template .= '<div class="panel-body">';

            $fast_hashes = array();

            foreach ( $rows as $_row => $value ) {
                $fast_hashes[$value['fast_hash']][$value['check_type']] = $value;
            }

            foreach ( $fast_hashes as $hash ) {

                if (!empty($hash['SIGNATURE']['path'])){
                    $path = $hash['SIGNATURE']['path'];
                } elseif (!empty($hash['HEURISTIC']['path'])) {
                    $path = $hash['HEURISTIC']['path'];
                } else {
                    $path = 'unknown_file_path';
                }

                $signature_part = ! empty($hash['SIGNATURE'])
                    ? ' signature check {result: <b>' . $hash['SIGNATURE']['status_of_check']
                      . '</b>; date: '
                      . '<i>'
                      . gmdate(
                          'M d Y H:i:s',
                          $hash['SIGNATURE']['checked_at']
                      ) . '</i>'
                                                                 . '</b>}' : '';
                $heuristic_part = ! empty($hash['HEURISTIC'])
                    ? ' heuristic check {result: <b>' . $hash['HEURISTIC']['status_of_check']
                      . '</b>; date: '
                      . '<i>'
                      . gmdate(
                          'M d Y H:i:s',
                          $hash['HEURISTIC']['checked_at']
                      ) . '</i>'
                                                                 . '</b>}' : '';

                $template .= '<p class="spbc_log-line">'
                    . '<b>' . $path . '</b> : ' . $signature_part . $heuristic_part
                    . '</p>';
            }

            $template .= '</div>';
            $template .= '</div>';
        }

        return $template;
    }

    /**
     * @return string
     * @psalm-suppress PossiblyUnusedMethod
     */
    public function getLogByParams()
    {
        $scan_results_log_repository = new ScanResultsLogRepository();
        $rows = $scan_results_log_repository->getScanResultsLogRows();
        $template = '';

        if (count($rows) > 0) {
            foreach ($rows as $row) {
                $template .= '<p class="spbc_log-line">'
                             . gmdate('Y-m-d H:i:s', $row['checked_at'])
                             . ' - ' . $row['path'] .
                             '<b>: ' . $row['status_of_check'] . '</b>' .
                             '<i>: ' . strtolower($row['check_type']) . '</i>' .
                             '</p>';
            }
        }

        return $template;
    }
}
