<?php

namespace CleantalkSP\SpbctWP\Helpers;

class IP extends \CleantalkSP\Common\Helpers\IP
{
    public static $known_headers = array(
        2  => array('slug' => 'remote_addr', 'name' => 'Remote Addr'),
        3  => array('slug' => 'x_forwarded_for', 'name' => 'X-Forwarder-For'),
        4  => array('slug' => 'x_real_ip', 'name' => 'X-Real-Ip'),
        5  => array('slug' => 'incapsula', 'name' => 'Incap-Client-Ip'),
        6  => array('slug' => 'ico_x_forwarded_for', 'name' => 'Ico-X-Forwarded-For'),
        7  => array('slug' => 'stackpath', 'name' => 'X-Sp-Forwarded-Ip'),
        8  => array('slug' => 'x_forwarded_by', 'name' => 'X-Client-Ip'),
        9  => array('slug' => 'sucury', 'name' => 'X-Sucuri-Clientip'),
        10 => array('slug' => 'ezoic', 'name' => 'X-Middleton-Ip'),
        11 => array('slug' => 'gtranslate', 'name' => 'X-Gt-Viewer-Ip'),
        12 => array('slug' => 'cloud_flare', 'name' => 'Cf-Connecting-Ip'),
        13 => array('slug' => 'ovh', 'name' => 'Remote-Ip'),
    );
    public static function get($ip_type_to_get = 'real', $headers = array(), $recursion = false)
    {
        global $spbc;

        if ($ip_type_to_get !== 'real' && $ip_type_to_get === 1) {
            $ip_type_to_get = self::$known_headers[(int)$spbc->settings['secfw__get_ip']]['slug'];
        }

        return parent::get($ip_type_to_get, $headers, $recursion);
    }

    public static function getKnownCDNHeadersNames()
    {
        $result = array_map(function ($cdn_record_data) {
            return $cdn_record_data['slug'];
        }, self::$known_headers);
        return $result;
    }

    public static function getHeaderIDbySlug($slug = '')
    {
        foreach (self::$known_headers as $header_id => $header_data) {
            if ($header_data['slug'] === $slug) {
                return (string)($header_id);
            }
        }
        return 'auto';
    }
}
