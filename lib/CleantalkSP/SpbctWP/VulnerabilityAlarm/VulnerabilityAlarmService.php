<?php

namespace CleantalkSP\SpbctWP\VulnerabilityAlarm;

class VulnerabilityAlarmService
{
    public static function updateVulnerabilitiesLibrary()
    {
        $modules = self::getModules();
        $report = self::getReport($modules);
        self::writeReport($report);
    }

    /**
     * @return array
     */
    public static function getVulnerabilitiesList()
    {
        $list = get_option(VulnerabilityAlarm::VULNERABILITY_LIST);

        if ( ! $list ) {
            return [];
        }

        return $list;
    }

    /**
     * @return void
     */
    public static function checkVulnerabilities()
    {
        // $list = get_option(VulnerabilityAlarm::VULNERABILITY_LIST);
        // if ( ! $list ) {
        //     return;
        // }

        // $modules = self::getModules();
        // $report = self::compare($modules, $list);
        // self::writeReport($report);
    }

    /**
     * @param array $modules
     * @param array $list
     */
    private static function compare($modules, $list)
    {

    }

    /**
     * Gathering info about installed modules
     * 
     * @return array
     */
    private static function getModules()
    {
        $modules = [
            'themes' => [],
            'plugins' => []
        ];

        require_once(ABSPATH . 'wp-admin/includes/plugin.php');
        require_once(ABSPATH . 'wp-admin/includes/theme.php');

        $plugins = get_plugins();
        $themes = wp_get_themes();

        foreach ($themes as $theme) {
            $modules['themes'][] = [
                $theme->get('TextDomain'),
                $theme->get('Version')
            ];
        }

        foreach ($plugins as $plugin) {
            $modules['plugins'][] = [
                $plugin['TextDomain'],
                $plugin['Version']
            ];
        }

        return $modules;
    }

    /**
     * Get info about vulnerabilities from cloud
     */
    private static function getReport($modules)
    {
        $result = [];

        $test_json = '
        {
            "themes": {
                "twentytwenty": {
                    "status": "vulnerable|safe_cmws|safe_certified",
                    "safe_version_exist": "1.2.2"
                }
            },
            "plugins": {
                "easy-wp-smtp": {
                    "status": "vulnerable|safe_cmws|safe_certified",
                    "safe_version_exist": "1.2.2"
                }
            } 
        }
        ';

        $result = json_decode($test_json, true);

        return $result;
    }

    /**
     * Save vulnerability info
     */
    private static function writeReport($report)
    {
        update_option(VulnerabilityAlarm::VULNERABILITY_LIST, $report);
    }
}
