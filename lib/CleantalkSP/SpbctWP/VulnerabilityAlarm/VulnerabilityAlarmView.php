<?php

namespace CleantalkSP\SpbctWP\VulnerabilityAlarm;

use CleantalkSP\SpbctWP\VulnerabilityAlarm\Dto\PluginReport;

class VulnerabilityAlarmView
{
    public static function renderAlarms($content, $case)
    {
        switch ($case) {
            case VulnerabilityAlarm::INSTALLED_PLUGINS_LIST:
                return self::renderInstalledPluginsList($content);
        }
    }

    /**
     * @param string $plugin_file
     * @param PluginReport $plugin_report
     *
     * @return void
     */
    public static function showPluginAlarm($plugin_file, $plugin_report)
    {
        $active = is_plugin_active($plugin_file) ? 'active' : 'inactive';
        $slug = $plugin_report->app_name;
        ?>
        <tr
            id="<?= esc_attr($slug); ?>-vulnerable"
            class="plugin-update-tr spbc-vulnerable-notice <?= esc_attr($active); ?>"
            data-slug="<?= esc_attr($slug); ?>"
            data-plugin="<?= esc_attr($plugin_file); ?>"
        >
            <td colspan="4" class="plugin-update colspanchange">
                <div class="notice inline notice-error notice-alt">
                    <p><i class="spbc-icon-attention-alt" style="color: #d63638; font-size: 16px;"></i>The plugin contains known vulnerability <?= $plugin_report->CVE ?></p>
                </div>
            </td>
        </tr>
        <?php

    }

    /**
     * @psalm-suppress PossiblyUnusedMethod
     * @todo replace the suppressing above
     */
    public function renderTab()
    {
    }

    /**
     * Show label for each plugin on installed plugins page
     *
     * @param string $path
     * @return null|string
     */
    private static function renderInstalledPluginsList($path)
    {
        $vulnerabilities = VulnerabilityAlarmService::getVulnerabilitiesList();

        if (empty($vulnerabilities)) {
            return;
        }

        $plugins = $vulnerabilities['plugins'];
        $list = array_keys($plugins);
        preg_match('#^([\w\-])+#', $path, $title);
        if ( in_array($title[0], $list) ) {
            $label_text = __('alarm - vulnerability extension', 'security-malware-firewall');
            $label_style = "\"background: red; color: white; font-weight: bold; text-align: center; border-radius: 5px;\"";

            return '<script class="spbct_vulnerability_label_not_secure">
                let spbct_vulnerability_label = document.createElement("div");
                spbct_vulnerability_label.setAttribute("style", ' . $label_style . ');
                spbct_vulnerability_label.append("' . $label_text . '");
                let cpbct_vulnerability_title_td = document.querySelector(".spbct_vulnerability_label_not_secure")
                    .closest("td").previousSibling.prepend(spbct_vulnerability_label);
                </script>';
        }
    }
}
