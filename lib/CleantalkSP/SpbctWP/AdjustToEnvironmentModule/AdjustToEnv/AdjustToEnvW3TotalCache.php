<?php

namespace CleantalkSP\SpbctWP\AdjustToEnvironmentModule\AdjustToEnv;

class AdjustToEnvW3TotalCache extends AdjustToEnvAbstract
{
    public function __construct($info)
    {
        parent::__construct($info);
    }

    /**
     * Check if need to adjust
     * @return bool
     * @psalm-suppress UndefinedFunction
     */
    protected function isNeedToAdjust()
    {
        // if site admin request to reverse adjust once, not need to adjust it again
        $isReversed = isset($this->info[static::class]['changed']) && !$this->info[static::class]['changed'];

        return apbct_is_plugin_active('w3-total-cache/w3-total-cache.php') && !$isReversed;
    }

    /**
     * Check if need to adjust
     * @return bool
     * @psalm-suppress UndefinedFunction
     */
    public function isNeedToAdjustOne()
    {
        return apbct_is_plugin_active('w3-total-cache/w3-total-cache.php');
    }

    /**
     * Check if already adjusted
     * @return bool
     */
    protected function isAlreadyAdjusted()
    {
        return isset($this->info[static::class]['changed']) && $this->info[static::class]['changed'];
    }

    /**
     * Adjust
     * @return void
     * @psalm-suppress UndefinedClass
     * @psalm-suppress UnusedVariable
     */
    protected function adjust()
    {
        $original_config = \W3TC\Dispatcher::config();
        $config = new \W3TC\Config();
        $config->set('pgcache.cache.query', false);
        \W3TC\Util_Admin::config_save($original_config, $config);

        \W3TC\Cdnfsd_CacheFlush::w3tc_flush_all();

        $this->changed = true;
        $this->keepInfoWhatWeChanged();
    }

    /**
     * Reverse the adjustments made by the adjust() method
     * @return void
     * @psalm-suppress UndefinedClass
     * @psalm-suppress PossiblyUnusedMethod
     * @psalm-suppress UnusedVariable
     */
    public function reverseAdjust()
    {
        $original_config = \W3TC\Dispatcher::config();
        $config = new \W3TC\Config();
        $config->set('pgcache.cache.query', true);
        \W3TC\Util_Admin::config_save($original_config, $config);

        \W3TC\Cdnfsd_CacheFlush::w3tc_flush_all();

        $this->changed = false;
        $this->keepInfoWhatWeChanged();
    }

    /**
     * Keep info what we changed
     * @return void
     */
    protected function keepInfoWhatWeChanged()
    {
        $comment = 'Disabled "Cache URIs with query string variables" option.'
            . 'Because it can break AJAX requests and there not possible to add exclusion to check that request contains query string or not.';

        if (!$this->changed) {
            $comment = 'Enable "Cache URIs with query string variables" option back. By site admin request.';
        }

        $this->info[static::class] = [
            'changed' => $this->changed,
            'last_intervention_date' => date('Y-m-d H:i:s'),
            'comment' => $comment,
        ];
    }
}
