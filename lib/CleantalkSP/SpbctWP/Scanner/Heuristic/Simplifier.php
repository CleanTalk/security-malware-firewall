<?php


namespace CleantalkSP\SpbctWp\Scanner\Heuristic;


class Simplifier
{
    /**
     * @var Tokens
     */
    private $tokensHandler;
    
    public function __construct( Tokens $tokens_handler )
    {
        $this->tokensHandler = $tokens_handler;
    }
    
    /**
     * Extracts non-code lexems in the separate property
     *
     * @param array[] $tokens
     * @param int     $key
     *
     * @return bool returns true if changes were made in original $tokens array or false if wasn't
     */
    public function extractNonCodeTokens( &$tokens, $key )
    {
        if( $this->tokensHandler->isCurrentTokenInGroup('non_code') ){
            $this->tokensHandler->non_code[] = $tokens[ $key ];
            unset( $tokens[ $key ] );
            
            return false;
        }
    
        return true;
    }
    
    /**
     * Strip long and useless whitespaces
     *
     * @param array[] $tokens
     * @param int     $key
     *
     * @return bool returns true if changes were made in original $tokens array or false if isn't
     */
    public function stripWhitespaces(&$tokens, $key)
    {
        if( $tokens[$key][0] === 'T_WHITESPACE' ){
            $next = isset($tokens[$key + 1]) ? $tokens[$key + 1] : array(null, null);
            $prev = isset($tokens[$key - 1]) ? $tokens[$key - 1] : array(null, null);
            
            if(
                $this->tokensHandler->isTokenInGroup($next,'strip_whitespace_around') ||
                $this->tokensHandler->isTokenInGroup($prev,'strip_whitespace_around')
            ){
                unset($tokens[$key]);
                
                return false;
            }
            
            $tokens[$key][1] = ' ';
        }
        
        return true;
    }
    
    
}