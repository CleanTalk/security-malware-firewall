<?php

namespace CleantalkSP\SpbctWP\Scanner\FileMonitoringModule;

class FileMonitoringEntry
{
    private static $base_important_files = array(
        '/.htaccess',
        '/wp-config.php',
        '/wp-admin/admin.php',
        '/wp-includes/functions.php',
    );

    /**
     * @var string
     */
    private $site_root;

    /**
     * @var array
     */
    private $theme_functions_paths;
    /**
     * @var string[]
     */
    private $important_files;

    public function __construct()
    {
        $this->site_root = rtrim(ABSPATH, '/');
        $this->theme_functions_paths = FileMonitoringHelper::getThemeFunctionsPaths();
        $this->important_files = array_merge(self::$base_important_files, $this->theme_functions_paths);
    }

    public function handle()
    {
        // Writing to the database of information about files
        // (_important_files, _important_file_snapshots)
        foreach ($this->important_files as $file) {
            $system_file_path = $this->site_root . $file;

            if (file_exists($system_file_path)) {
                $file_data = new File($system_file_path);

                // Saved new file or added id to current File ($file_data)
                FileMonitoringRepository::saveFileIfNew($file_data);

                // Save snapshot
                FileMonitoringRepository::saveNewSnapshot($file_data);



                d($file_data);
                // Файл на данный момент на месте
                // Добавляем/обновляем снапшот, сохраняем id снапшота в текущий
                // Добавляем/обновляем строку с файлом
            } else {
                // добавляем в таблицу
                // Снапшот равен null - показатель что файла нет сейчас.
            }
        }
        return $this;
    }

    public function getResults()
    {
        return array(
            'end' => 1,
        );
    }
}