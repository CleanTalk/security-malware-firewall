<?php

namespace CleantalkSP\SpbctWP\Scanner\FileMonitoringModule;

class FileMonitoringRepository
{
    public static function saveFileIfNew(File $file)
    {
        global $wpdb;

        $exists_file = self::getFileByPathHash($file->path_hash);

        if (is_null($exists_file)) {
            $wpdb->insert(
                SPBC_TBL_IMPORTANT_FILES,
                array(
                    'path' => $file->path,
                    'path_hash' => $file->path_hash,
                    'started_at' => $file->started_at
                ),
                array(
                    '%s', '%s', '%d'
                )
            );

            $file->id = $wpdb->insert_id;
        } else {
            $file->id = $exists_file->id;
        }
    }

    public static function saveNewSnapshot(File $file)
    {
        global $wpdb;


        $exists_file = self::getSnapshotByHash($file);
        d($exists_file);

//        if (is_null($exists_file)) {
//            $wpdb->insert(
//                SPBC_TBL_IMPORTANT_FILES,
//                array(
//                    'path' => $file->path,
//                    'path_hash' => $file->path_hash,
//                    'started_at' => $file->started_at
//                ),
//                array(
//                    '%s', '%s', '%d'
//                )
//            );
//
//            $file->id = $wpdb->insert_id;
//        } else {
//            $file->id = $exists_file->id;
//        }
    }

    public static function getFileByPathHash($path_hash)
    {
        global $wpdb;

        return $wpdb->get_row(
            "SELECT * FROM "
            . SPBC_TBL_IMPORTANT_FILES
            . " WHERE path_hash = '" . $path_hash . "'"
        );
    }

    private static function getSnapshotByHash(File $file)
    {
        global $wpdb;

        return $wpdb->get_row(
            "SELECT * FROM "
            . SPBC_TBL_IMPORTANT_FILES_SNAPSHOTS
            . " WHERE content_hash = '" . $file->content_hash . "' AND file_id = " . $file->id
        );
    }
}
