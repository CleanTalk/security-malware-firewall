<?php

namespace CleantalkSP\SpbctWP\Scanner\FilesDirectoriesPermissionsModule;

use CleantalkSP\SpbctWP\Scanner\Surface;

class DirectoriesPermissionsHandler
{
    /**
     * @var array 
     */
    private $directories = array();

    /**
     * @var Surface
     */
    private $surface;

    /**
     * @var integer
     */
    const LOWER_PERMISSION_LEVEL = 755;

    /**
     * @var DirectoriesPermissionsRepository
     */
    private $repository;

    /**
     * @param Surface $surface
     */
    public function __construct(Surface $surface)
    {
        $this->surface = $surface;

        if (isset($this->surface->dirs) && !empty($this->surface->dirs)) {
            $this->setDirectories($this->surface->dirs);
        }
        
        $this->repository = new DirectoriesPermissionsRepository();
    }

    public function handle()
    {
        // No directories - no work
        if (empty($this->getDirectories())) {
            return;
        }

        // Let's run through the directories and process them
        foreach ($this->getDirectories() as $directory) {
            $path = isset($directory['path']) ? trim($directory['path']) : '';

            if (empty($path)) {
                continue;
            }
            
            // Check permissions
            $permission = (int)substr(decoct(fileperms($path)), 2);
            
            if ($permission > $this::LOWER_PERMISSION_LEVEL) {
                // Add to table
                $this->repository->add($path, $permission);
            }
        }
    }

    /**
     * @return array
     */
    public function getDirectories() {
        return $this->directories;
    }

    /**
     * @param array $directories
     */
    public function setDirectories( $directories ) {
        $this->directories = $directories;
    }
}