<?php

namespace CleantalkSP\SpbctWP\Scanner\CureLog;

use CleantalkSP\SpbctWP\DB;

class CureLog
{
    private $db;
    public function __construct()
    {
        $this->db = DB::getInstance();
    }

    public function getCountData()
    {
        $query = 'SELECT COUNT(*) as cnt FROM ' . SPBC_TBL_CURE_LOG;
        $result = $this->db->fetch($query);
        return $result->cnt;
    }

    public function hasFailedCureTries()
    {
        $query = 'SELECT COUNT(*) as cnt FROM ' . SPBC_TBL_CURE_LOG . ' WHERE cured = 0';
        $result = $this->db->fetch($query);
        return (bool)$result->cnt;
    }

    public function getDataToAccordion()
    {
        $query = 'SELECT fast_hash, real_path, cured, cci_cured, has_backup, fail_reason, last_cure_date FROM ' . SPBC_TBL_CURE_LOG;
        $result = $this->db->fetchAll($query, OBJECT);

        foreach ($result as $row) {
            if ( isset($row->cured) && $row->cured == 1 ) {
                $row->cured = 'CURED';
            } else {
                $row->cured = 'FAILED';
            }
            if ( !empty($row->last_cure_date) ) {
                $row->last_cure_date = date("M d Y H:i:s", $row->last_cure_date);
            } else {
                $row->last_cure_date = 'N/A';
            }
        }
        return $result;
    }

    public function logCureResult(CureLogRecord $cure_log_record)
    {

        if ($this->fileHasBackup($cure_log_record->real_path)) {
            $cure_log_record->has_backup = 1;
        }

        $this->db->prepare(
            'INSERT INTO ' . SPBC_TBL_CURE_LOG
                . ' (`fast_hash`, `real_path`, `cured`, `cci_cured`,`has_backup`,`fail_reason`, `last_cure_date`) VALUES'
                . "(%s, %s, %d, %s, %d, %s, %d)"
                . 'ON DUPLICATE KEY UPDATE
                cured = VALUES(`cured`)',
            array($cure_log_record->fast_hash,
                $cure_log_record->real_path,
                $cure_log_record->cured,
                $cure_log_record->cci_cured,
                $cure_log_record->has_backup,
                $cure_log_record->fail_reason,
                $cure_log_record->last_cure_date,
            )
        )->execute();
    }

    private function fileHasBackup($real_path)
    {
        $query = 'SELECT COUNT(*) as cnt FROM ' . SPBC_TBL_BACKUPED_FILES . ' WHERE real_path = "' . $real_path . '"';
        $result = $this->db->fetch($query);
        if (false !== $result && $result !== 0) {
            return true;
        }
        return false;
    }
}
