<?php

namespace CleantalkSP\SpbctWP\Scanner\ScanningStagesLogModule;

use CleantalkSP\SpbctWP\Scanner\ScanningStagesLogModule\Stages\FileSystemAnalysis;
use CleantalkSP\SpbctWP\Scanner\ScanningStagesLogModule\Stages\GetApprovedHashes;
use CleantalkSP\SpbctWP\Scanner\ScanningStagesLogModule\Stages\GetCmsHashes;
use CleantalkSP\SpbctWP\Scanner\ScanningStagesLogModule\Stages\GetModulesHashes;
use CleantalkSP\SpbctWP\Scanner\ScanningStagesLogModule\Stages\SignatureAnalysis;

class ScanningStagesRepository
{
    const WP_OPTION_NAME = 'spbc_scanning_stages_log';

    public static function saveStageData($stage_name, $data)
    {
        self::updateStageData($stage_name, $data);
    }

    private static function updateStageData($stage_name, $data)
    {
        $log_data = get_option(self::WP_OPTION_NAME);

        switch ($stage_name) {
            case 'get_cms_hashes':
                $log_data['get_cms_hashes'] = GetCmsHashes::getFormatData($data);
                break;
            case 'get_modules_hashes':
                $log_data['get_modules_hashes'] = GetModulesHashes::getFormatData($data, $log_data);
                break;
            case 'file_system_analysis':
                $log_data['file_system_analysis'] = FileSystemAnalysis::getFormatData($data, $log_data);
                break;
            case 'get_approved_hashes':
                $log_data['get_approved_hashes'] = GetApprovedHashes::getFormatData($data);
                break;
            case 'signature_analysis':
                $log_data['signature_analysis'] = SignatureAnalysis::getFormatData($data, $log_data);
                break;
        }

        update_option(self::WP_OPTION_NAME, $log_data);
    }

    private static function resetAllData()
    {
        update_option(self::WP_OPTION_NAME, array());
    }
}
