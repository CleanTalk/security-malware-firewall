<?php

namespace CleantalkSP\SpbctWP\Scanner\ScanningStagesLogModule\Stages;

use CleantalkSP\SpbctWP\Scanner\ScanningStagesLogModule\StageInterface;

class GetModulesHashes implements StageInterface
{
    const TITLE = 'Receiving plugins and themes hashes';
    const DESCRIPTION = 'Receiving plugins and themes hashes and saving to the database';
    const STAGE_NAME = 'get_modules_hashes';

    private $title;
    private $description;
    private $count_plugins;
    private $count_themes;
    private $count_plugins_without_hashes = 0;
    private $count_themes_without_hashes = 0;
    private $reset_count_plugins_without_hashes = 0;
    private $reset_count_themes_without_hashes = 0;
    

    public function getFormatData($log_data)
    {
        if (empty($this->count_plugins) && !empty($log_data[self::STAGE_NAME]['count_plugins'])) {
            $this->count_plugins = $log_data[self::STAGE_NAME]['count_plugins'];
        }
        if (empty($this->count_themes) && !empty($log_data[self::STAGE_NAME]['count_themes'])) {
            $this->count_themes = $log_data[self::STAGE_NAME]['count_themes'];
        }

        if ($this->reset_count_plugins_without_hashes) {
            $this->count_plugins_without_hashes = 0;
        } else {
            $this->count_plugins_without_hashes += $log_data[self::STAGE_NAME]['count_plugins_without_hashes'] ?: 0;
        }
        if ($this->reset_count_themes_without_hashes) {
            $this->count_themes_without_hashes = 0;
        } else {
            $this->count_themes_without_hashes += $log_data[self::STAGE_NAME]['count_themes_without_hashes'] ?: 0;
        }

        return $this->toArray();
    }

    public function setCountPlugins($count)
    {
        $this->count_plugins = $count;
    }

    public function setCountThemes($count)
    {
        $this->count_themes = $count;
    }

    public function resetCountPluginsWithoutHashes()
    {
        $this->reset_count_plugins_without_hashes = 1;
    }

    public function resetCountThemesWithoutHashes()
    {
        $this->reset_count_themes_without_hashes = 1;
    }
    
    public function updateCountPluginsWithoutHashes()
    {
        $this->count_plugins_without_hashes++;
    }
    
    public function updateCountThemesWithoutHashes()
    {
        $this->count_themes_without_hashes++;
    }
    
    private function toArray()
    {
        return array(
            'count_plugins'                 => $this->count_plugins,
            'count_themes'                  => $this->count_themes,
            'count_plugins_without_hashes'  => $this->count_plugins_without_hashes,
            'count_themes_without_hashes'   => $this->count_themes_without_hashes
        );
    }
}
