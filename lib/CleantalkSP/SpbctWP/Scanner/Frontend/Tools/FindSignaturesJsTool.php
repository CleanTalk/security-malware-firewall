<?php

namespace CleantalkSP\SpbctWP\Scanner\Frontend\Tools;

use CleantalkSP\SpbctWP\Helpers\Helper;

class FindSignaturesJsTool extends FrontendTool
{
    const TYPE = 'signatures';

    public function analyse()
    {
        $dom = new \DOMDocument();
        $resultDomLoading = $dom->loadHTML($this->page->getContentPage(), LIBXML_NOERROR);

        if ($resultDomLoading === false) {
            // Что то делаем если дом не прогрузился
        }

        $tagScripts = $dom->getElementsByTagName('script');
        foreach ($tagScripts as $script) {
            foreach ($this->config->getSignaturesJs() as $signature) {
                $search_type = Helper::isRegexp($signature['body'])
                    ? 'regexp'
                    : 'string';

                switch ( $search_type ) {
                    // Check with regular expression
                    case 'regexp':
                        if ( preg_match($signature['body'], $script->nodeValue, $matches) ) {
                            $this->problemsFound[] = array(
                                'type' => self::TYPE,
                                'code' => $matches[0],
                                'line' => $script->getLineNo(),
                                'signature' => $signature['id'],
                            );
                        }
                        break;

                    // Check with strings
                    default:
                        $pos = strpos($script->nodeValue, $signature['body']);
                        if ( $pos !== false ) {
                            $this->problemsFound[] = array(
                                'type' => self::TYPE,
                                'code' => $script->nodeValue,
                                'line' => $script->getLineNo(),
                                'signature' => $signature['id'],
                            );
                        }
                        break;
                }
            }
        }

        return $this->getResult();
    }
}