<?php

namespace CleantalkSP\SpbctWP\Scanner\Frontend;

use CleantalkSP\SpbctWP\Scanner\Frontend\Stages\FindRedirectsStage;

class FrontendScannerDispatcher
{
    const STAGES = array(
        FindRedirectsStage::class
    );
    /**
     * @var false|mixed|string|null
     */
    private $exclusionDomains;
    /**
     * @var false|mixed|null
     */
    private $homeUrl;

    public function __construct($exclusionDomains)
    {
        $exclusionDomains = str_replace(array("\r\n", "\n\r", "\r", "\n"), "\n", $exclusionDomains);
        $exclusionDomains = explode("\n", $exclusionDomains);

        $this->homeUrl = get_option('home');

        $this->exclusionDomains = $exclusionDomains
            ?  $this->homeUrl . '|' . implode('|', $exclusionDomains)
            :  $this->homeUrl;
    }

    public function analyzePage(PublicPageModel $page)
    {
        // Регистрирует (дата сканирования и т.д.) - но это может и не надо...
        // потому что это клиент должен решить что передать на сканирование

        // $exclusions =

        // Проводит по всем этапам
        foreach (self::STAGES as $stage) {
            $stageHandler = new $stage();
            $stageHandler->setPage($page);
            $stageHandler->setExclusions($this->exclusionDomains);
            $stageHandler->analyse();
            //$this->results[$stage] = $stageHandler->getResult();
        }

        // Выдает результат
    }
}