<?php

namespace CleantalkSP\SpbctWP\Scanner\ScanningStagesModule\Stages;

use CleantalkSP\SpbctWP\Scanner\ScanningStagesModule\AsArrayForStorageInterface;

class HeuristicAnalysis extends ScanningStageAbstract implements AsArrayForStorageInterface
{
    private $stage_name = 'heuristic_analysis';
    public $total_count_files_for_analysis = 0;
    public $count_files_to_check = 0;
    public $scanned_count_files = 0;
    public $statuses = array();

    public function asArrayForStorage()
    {
        return array(
            $this->stage_name => array(
                'total_count_files_for_analysis' => $this->total_count_files_for_analysis,
                'count_files_to_check' => $this->count_files_to_check,
                'scanned_count_files' => $this->scanned_count_files,
                'statuses' => $this->statuses
            )
        );
    }

    /** @psalm-suppress PossiblyUnusedMethod */
    public static function getTitle()
    {
        return __('Heuristic analysis', 'security-malware-firewall');
    }

    /** @psalm-suppress PossiblyUnusedMethod */
    public function getDescription()
    {
        return __('Total count files for analysis: ', 'security-malware-firewall')
               . $this->total_count_files_for_analysis
               . '; '
               . __('Count files to check: ', 'security-malware-firewall')
               . $this->count_files_to_check
               . '; '
               . __('Scanned count files: ', 'security-malware-firewall')
               . $this->scanned_count_files
               . '; '
               . __('Statuses: ', 'security-malware-firewall')
               . $this->getStatusesWithTitle();
    }

    public function getStatusesWithTitle()
    {
        $description = '';
        foreach ($this->statuses as $status => $count) {
            $description .= $status . ': ' . $count . '; ';
        }
        return $description;
    }
}
