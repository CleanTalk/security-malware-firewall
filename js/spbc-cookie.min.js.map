{"version":3,"file":"spbc-cookie.min.js","sources":["spbc-cookie.js"],"sourcesContent":["/**\r\n * Set Cookie\r\n * @param {string} cookies\r\n * @param {string} value\r\n * @param {number} expires\r\n */\r\nfunction spbcSetCookie( cookies, value, expires ) {/* eslint-disable-line no-unused-vars */\r\n    if ( typeof cookies === 'string' && ( typeof value === 'string' || typeof value === 'number' ) ) {\r\n        cookies = [[cookies, value, expires]];\r\n    }\r\n\r\n    // Cookies disabled\r\n    if ( +spbcPublic.data__set_cookies === 0 ) {\r\n        return;\r\n\r\n    // Using traditional cookies\r\n    } else if ( +spbcPublic.data__set_cookies === 1 ) {\r\n        cookies.forEach( function(item, i, arr) {\r\n            let expires = typeof item[2] !== 'undefined' ? 'expires=' + item[2] + '; ' : '';\r\n            let ctSecure = location.protocol === 'https:' ? '; secure' : '';\r\n            document.cookie = item[0] +\r\n                '=' + encodeURIComponent(item[1]) +\r\n                '; ' + expires + 'path=/; samesite=lax' +\r\n                ctSecure;\r\n        });\r\n\r\n    // Using alternative cookies\r\n    } else if ( +spbcPublic.data__set_cookies === 2 ) {\r\n        // Using REST API handler\r\n        if ( +spbcPublic.data__set_cookies__alt_sessions_type === 1 ) {\r\n            spbcSendRESTRequest(\r\n                'alt_sessions',\r\n                {\r\n                    method: 'POST',\r\n                    data: {cookies: cookies},\r\n                },\r\n            );\r\n        }\r\n        // Using AJAX request and handler\r\n        // }else if( +spbcPublic.data__set_cookies__alt_sessions_type === 2 ) {\r\n        //     apbct_public_sendAJAX(\r\n        //         {\r\n        //             action: 'apbct_alt_session__save__AJAX',\r\n        //             cookies: cookies,\r\n        //         },\r\n        //         {\r\n        //             apbct_ajax: 1,\r\n        //             notJson: 1,\r\n        //         }\r\n        //     );\r\n        // }\r\n    }\r\n}\r\n\r\n/**\r\n * Send REST Request\r\n * @param {string} route\r\n * @param {obj} params\r\n */\r\nfunction spbcSendRESTRequest( route, params ) {\r\n    let callback = params.callback || null;\r\n    let data = params.data || [];\r\n    let method = params.method || 'POST';\r\n\r\n    jQuery.ajax({\r\n        type: method,\r\n        url: spbcPublic._rest_url + 'cleantalk-security/v1/' + route,\r\n        data: data,\r\n        beforeSend: function( xhr ) {\r\n            xhr.setRequestHeader( 'X-WP-Nonce', spbcPublic._rest_nonce );\r\n            xhr.setRequestHeader('X-Robots-Tag', 'noindex, nofollow');\r\n        },\r\n        success: function(result) {\r\n            if (result.error) {\r\n                console.log('Security by Cleantalk. Error: ' + (result.error || 'Unknown'));\r\n            } else {\r\n                if (callback) {\r\n                    let obj = null;\r\n                    callback(result, route, params, obj);\r\n                }\r\n            }\r\n        },\r\n        error: function(jqXHR, textStatus, errorThrown) {\r\n            if ( errorThrown ) {\r\n                console.log('SPBCT_REST_ERROR');\r\n                console.log(jqXHR);\r\n                console.log(textStatus);\r\n                console.log('Security by Cleantalk plugin REST API error: ' +\r\n                    errorThrown +\r\n                    ' Please, contact Cleantalk tech support ' +\r\n                    'https://wordpress.org/support/plugin/security-malware-firewall/');\r\n            }\r\n        },\r\n    });\r\n}\r\n"],"names":["spbcSetCookie","cookies","value","expires","spbcPublic","data__set_cookies","forEach","item","i","arr","let","ctSecure","location","protocol","document","cookie","encodeURIComponent","data__set_cookies__alt_sessions_type","spbcSendRESTRequest","method","data","route","params","callback","jQuery","ajax","type","url","_rest_url","beforeSend","xhr","setRequestHeader","_rest_nonce","success","result","error","console","log","jqXHR","textStatus","errorThrown"],"mappings":"AAMA,SAASA,cAAeC,EAASC,EAAOC,GACZ,UAAnB,OAAOF,GAA2C,UAAjB,OAAOC,GAAuC,UAAjB,OAAOA,IACtED,EAAU,CAAC,CAACA,EAASC,EAAOC,KAIO,GAAlC,CAACC,WAAWC,oBAI6B,GAAlC,CAACD,WAAWC,kBACpBJ,EAAQK,QAAS,SAASC,EAAMC,EAAGC,GAC/BC,IAAIP,EAA6B,KAAA,IAAZI,EAAK,GAAqB,WAAaA,EAAK,GAAK,KAAO,GACzEI,EAAiC,WAAtBC,SAASC,SAAwB,WAAa,GAC7DC,SAASC,OAASR,EAAK,GACnB,IAAMS,mBAAmBT,EAAK,EAAE,EAChC,KAAOJ,EAAU,uBACjBQ,CACR,CAAC,EAGyC,GAAlC,CAACP,WAAWC,mBAEsC,GAArD,CAACD,WAAWa,sCACbC,oBACI,eACA,CACIC,OAAQ,OACRC,KAAM,CAACnB,QAASA,CAAO,CAC3B,CACJ,EAgBZ,CAOA,SAASiB,oBAAqBG,EAAOC,GACjCZ,IAAIa,EAAWD,EAAOC,UAAY,KAIlCC,OAAOC,KAAK,CACRC,KAHSJ,EAAOH,QAAU,OAI1BQ,IAAKvB,WAAWwB,UAAY,yBAA2BP,EACvDD,KANOE,EAAOF,MAAQ,GAOtBS,WAAY,SAAUC,GAClBA,EAAIC,iBAAkB,aAAc3B,WAAW4B,WAAY,EAC3DF,EAAIC,iBAAiB,eAAgB,mBAAmB,CAC5D,EACAE,QAAS,SAASC,GACVA,EAAOC,MACPC,QAAQC,IAAI,kCAAoCH,EAAOC,OAAS,UAAU,EAEtEZ,GAEAA,EAASW,EAAQb,EAAOC,EADd,IACyB,CAG/C,EACAa,MAAO,SAASG,EAAOC,EAAYC,GAC1BA,IACDJ,QAAQC,IAAI,kBAAkB,EAC9BD,QAAQC,IAAIC,CAAK,EACjBF,QAAQC,IAAIE,CAAU,EACtBH,QAAQC,IAAI,gDACRG,EAEA,yGAAiE,EAE7E,CACJ,CAAC,CACL"}