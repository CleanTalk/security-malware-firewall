{"version":3,"file":"spbc-scanner-plugin.min.js","sources":["spbc-scanner-plugin.js"],"sourcesContent":["'use strict';\r\n\r\n/**\r\n * class SpbcMalwareScanner\r\n */\r\nclass SpbcMalwareScanner {/* eslint-disable-line no-unused-vars */\r\n    first_start = true;\r\n\r\n    active = false;\r\n\r\n    root = '';\r\n    settings = [];\r\n    states = [\r\n        'get_cms_hashes',\r\n        'get_modules_hashes',\r\n        'clean_results',\r\n        'file_system_analysis',\r\n        'get_approved_hashes',\r\n        'get_denied_hashes',\r\n        'signature_analysis',\r\n        'heuristic_analysis',\r\n        'schedule_send_heuristic_suspicious_files',\r\n        'auto_cure_backup',\r\n        'auto_cure',\r\n        'outbound_links',\r\n        'frontend_analysis',\r\n        'important_files_listing',\r\n        'send_results',\r\n    ];\r\n    state = null;\r\n    offset = 0;\r\n    amount = 0;\r\n    amount_coefficient = 1;\r\n    total_scanned = 0;\r\n    scan_percent = 0;\r\n    percent_completed = 0;\r\n\r\n    paused = false;\r\n\r\n    button = null;\r\n    spinner = null;\r\n\r\n    progress_overall = null;\r\n    progressbar = null;\r\n    progressbar_text = null;\r\n\r\n    timeout = 60000;\r\n\r\n    state_timer = 0;\r\n\r\n    /**\r\n     * constructor\r\n     * @param {array} properties\r\n     */\r\n    constructor( properties ) {\r\n        console.log('init');\r\n        if (jQuery('#spbcscan-results-log-module').length) {\r\n            jQuery('.spbc-scan-log-title').removeClass('spbc---hidden');\r\n        }\r\n\r\n        // Crunch for cure backups\r\n        if ( typeof properties['settings']['auto_cure'] !== 'undefined' ) {\r\n            properties['settings']['scanner__auto_cure_backup'] = '1';\r\n        }\r\n\r\n        for ( let key in properties ) {\r\n            if ( typeof this[key] !== 'undefined' ) {\r\n                this[key] = properties[key];\r\n            }\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Function Action Control\r\n     */\r\n    actionControl() {\r\n        if (this.state === null) {\r\n            this.start();\r\n        } else if (this.paused) {\r\n            this.resume();\r\n            this.controller();\r\n        } else {\r\n            this.pause();\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Function Start\r\n     */\r\n    start() {\r\n        this.active = true;\r\n        this.state_timer = Math.round(new Date().getTime() /1000);\r\n\r\n        this.state = this.getNextState( null );\r\n\r\n        this.setPercents( 0 );\r\n        this.scan_percent = 0;\r\n        this.offset = 0;\r\n        this.progress_overall.children('span')\r\n            .removeClass('spbc_bold')\r\n            .filter('.spbc_overall_scan_status_' + this.state)\r\n            .addClass('spbc_bold');\r\n\r\n        this.progressbar.show(500);\r\n        this.progress_overall.show(500);\r\n        this.button.html(spbcScaner.button_scan_pause);\r\n        this.spinner.css({display: 'inline'});\r\n\r\n        setTimeout(() => {\r\n            this.controller();\r\n        }, 1000);\r\n    };\r\n\r\n    /**\r\n     * Function Pause\r\n     * @param {*} result\r\n     * @param {*} data\r\n     * @param {*} opt\r\n     */\r\n    pause( result, data, opt ) {\r\n        console.log('PAUSE');\r\n        this.button.html(spbcScaner.button_scan_resume);\r\n        this.spinner.css({display: 'none'});\r\n        this.paused = true;\r\n        this.active = false;\r\n    };\r\n\r\n    /**\r\n     * Function Resume\r\n     * @param {*} opt\r\n     */\r\n    resume( opt ) {\r\n        console.log('RESUME');\r\n        this.button.html(spbcScaner.button_scan_pause);\r\n        this.spinner.css({display: 'inline'});\r\n        this.paused = false;\r\n        this.active = true;\r\n    };\r\n\r\n    /**\r\n     * Function End\r\n     * @param {bool} reload\r\n     */\r\n    end( reload ) {\r\n        this.progressbar.hide(500);\r\n        this.progress_overall.hide(500);\r\n        this.button.html(spbcScaner.button_scan_perform);\r\n        this.spinner.css({display: 'none'});\r\n        this.state = null;\r\n        this.plug = false;\r\n        this.total_scanned = 0;\r\n        this.active = false;\r\n\r\n        if (reload) {\r\n            document.location = document.location;\r\n        } else {\r\n            spbcSendAJAXRequest(\r\n                {action: 'spbc_scanner_tab__reload_accordion'},\r\n                {\r\n                    notJson: true,\r\n                    callback: function(result, data, params, obj) {\r\n                        jQuery(obj).accordion('destroy')\r\n                            .html(result)\r\n                            .accordion({\r\n                                header: 'h3',\r\n                                heightStyle: 'content',\r\n                                collapsible: true,\r\n                                active: false,\r\n                            });\r\n                        spbcTblBulkActionsListen();\r\n                        spbcTblRowActionsListen();\r\n                        spbcTblPaginationListen();\r\n                        spbcTblSortListen();\r\n                        spbcStartShowHide();\r\n                        spbcScannerReloadScanInfo();\r\n                    },\r\n                },\r\n                jQuery('#spbc_scan_accordion'),\r\n            );\r\n\r\n            if (!jQuery('#spbc_scanner_clear').length) {\r\n                let clearLink = '<p id=\"spbc_scanner_clear\" ' +\r\n                    'class=\"spbc_hint spbc_hint-send_security_log spbc_hint--link spbc_hint--top_right\" ' +\r\n                    'onclick=\"spbcScannerButtonClearScanResults()\">Clear scanner logs</p><br>';\r\n                jQuery(clearLink).insertBefore('#spbcscan-scanner-caption');\r\n            }\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Function Controller\r\n     * @param {obj} result\r\n     */\r\n    controller( result ) {\r\n        console.log(this.state);\r\n\r\n        // The current stage is over. Switching to the new one\r\n        if ( typeof result !== 'undefined' && result.end ) {\r\n            this.state = this.getNextState( this.state );\r\n\r\n            // End condition\r\n            if (typeof this.state === 'undefined') {\r\n                this.end();\r\n                return;\r\n            }\r\n\r\n            // Set percent to 0\r\n            this.setPercents( 0 );\r\n            this.scan_percent = 0;\r\n            this.offset = 0;\r\n\r\n            // Changing visualizing of the current stage\r\n            this.progress_overall.children('span')\r\n                .removeClass('spbc_bold')\r\n                .filter('.spbc_overall_scan_status_' + this.state)\r\n                .addClass('spbc_bold');\r\n        }\r\n\r\n        // Break execution if paused\r\n        if ( this.paused === true ) {\r\n            return;\r\n        }\r\n\r\n        // // AJAX params\r\n        let data = {\r\n            action: 'spbc_scanner_controller_front',\r\n            method: this.state,\r\n            offset: this.offset,\r\n        };\r\n\r\n        let params = {\r\n            type: 'GET',\r\n            success: this.success,\r\n            callback: this.successCallback,\r\n            error: this.error,\r\n            errorOutput: this.errorOutput,\r\n            complete: null,\r\n            context: this,\r\n            timeout: 120000,\r\n        };\r\n\r\n        switch (this.state) {\r\n        case 'get_modules_hashes': this.amount = 2; break;\r\n        case 'clear_table': this.amount = 10000; break;\r\n        case 'file_system_analysis': this.amount = 700; break;\r\n        case 'auto_cure': this.amount = 5; break;\r\n        case 'outbound_links': this.amount = 10; break;\r\n        case 'frontend_analysis': this.amount = spbcSettings.frontendAnalysisAmount; break;\r\n        case 'signature_analysis': this.amount = 10; data.status = 'UNKNOWN,MODIFIED,OK,INFECTED,ERROR'; break;\r\n        case 'heuristic_analysis': this.amount = 4; data.status = 'UNKNOWN,MODIFIED,OK,INFECTED,ERROR'; break;\r\n        case 'schedule_send_heuristic_suspicious_files': this.amount = 1; break;\r\n        }\r\n\r\n        data.amount = Math.round(this.amount * this.amount_coefficient);\r\n\r\n        spbcSendAJAXRequest(\r\n            data,\r\n            params,\r\n            jQuery('#spbc_scan_accordion'),\r\n        );\r\n    };\r\n\r\n    /**\r\n     * Set Coefficients\r\n     * @param {string} state\r\n     */\r\n    setCoefficients( state ) {\r\n        let coefficient = this.amount_coefficient;\r\n        switch (state) {\r\n        case 'file_system_analysis': coefficient *= 1.5; break;\r\n        }\r\n        this.amount_coefficient = coefficient;\r\n    };\r\n\r\n    /**\r\n     * Get Next State\r\n     * @param {string} state\r\n     * @return {number}\r\n     */\r\n    getNextState( state ) {\r\n        state = state === null ? this.states[0] : this.states[this.states.indexOf( state ) + 1];\r\n\r\n        if (typeof this.settings['scanner__' + state] !== 'undefined' && +this.settings['scanner__' + state] === 0) {\r\n            state = this.getNextState( state );\r\n        }\r\n\r\n        return state;\r\n    };\r\n\r\n    /**\r\n     * Set Percents\r\n     * @param {number} percents\r\n     */\r\n    setPercents( percents ) {\r\n        this.percent_completed = Math.floor( percents * 100 ) / 100;\r\n        this.progressbar.progressbar( 'option', 'value', this.percent_completed );\r\n        this.progressbar_text.text( spbcScaner['progressbar_' + this.state] + ' - ' + this.percent_completed + '%' );\r\n    };\r\n\r\n    /**\r\n     * Function Success\r\n     * @param {obj} response\r\n     */\r\n    success( response ) {\r\n        if ( !! response.error ) {\r\n            this.error(\r\n                {status: 200, responseText: response.error},\r\n                response.error,\r\n                response.msg,\r\n            );\r\n        } else {\r\n            if ( this.successCallback ) {\r\n                this.successCallback( response, this.data, this.obj );\r\n            }\r\n        }\r\n    };\r\n\r\n    // Processing response from backend\r\n    /**\r\n     * Success Callback\r\n     * @param {obj} result\r\n     */\r\n    successCallback( result ) {\r\n        console.log( result );\r\n\r\n        this.interactAccordion(result);\r\n\r\n        if ( typeof result.total !== 'undefined' ) {\r\n            this.scan_percent = 100 / result.total;\r\n        }\r\n\r\n        if ( typeof result.processed_items !== 'undefined') {\r\n            if ( this.state === 'heuristic_analysis' && typeof result.total !== 0 ) {\r\n                this.logRaw('<h3 class=\"spbc_log-block_header\">Heuristic Analysis</h3>');\r\n            }\r\n            if ( this.state === 'signature_analysis' && typeof result.total !== 0 ) {\r\n                this.logRaw('<h3 class=\"spbc_log-block_header\">Signature Analysis</h3>');\r\n            }\r\n\r\n            this.logFileEntry( result.processed_items );\r\n        }\r\n\r\n        if ( typeof result.stage_data_for_logging !== 'undefined') {\r\n            this.logStageEntry( result.stage_data_for_logging );\r\n        }\r\n\r\n        // Add link on shuffle salt if cured\r\n        if (result.cured !== undefined && Number(result.cured) > 0) {\r\n            this.showLinkForShuffleSalts(result.message);\r\n        }\r\n\r\n        if ( result.end !== true && result.end !== 1 ) {\r\n            let processedPercents = this.percent_completed + result.processed * this.scan_percent;\r\n            if (result.stage_data_for_logging.title === 'File System Analysis' && processedPercents > 100) {\r\n                processedPercents = 100;\r\n            }\r\n            this.setPercents(processedPercents);\r\n            this.offset = this.offset + result.processed;\r\n            this.controller( result );\r\n        } else {\r\n            console.log( this.state +\r\n                ' stage took ' +\r\n                ( Math.round(new Date().getTime() /1000) - this.state_timer ) +\r\n                ' seconds to complete' );\r\n            this.state_timer = Math.round(new Date().getTime()/1000);\r\n            this.setPercents( 100 );\r\n            this.scan_percent = 0;\r\n            this.offset = 0;\r\n            setTimeout(() => {\r\n                this.controller( result );\r\n            }, 300);\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Run interactive refresh for accordion.\r\n     * @param {obj|string[]} result\r\n     */\r\n    interactAccordion(result) {\r\n        // validation control\r\n        if (result.hasOwnProperty('interactivity_data') &&\r\n            result.interactivity_data.hasOwnProperty('update_text') &&\r\n            result.interactivity_data.update_text &&\r\n            result.interactivity_data.hasOwnProperty('refresh_data') &&\r\n            result.interactivity_data.refresh_data.hasOwnProperty('do_refresh') &&\r\n            result.interactivity_data.refresh_data.do_refresh &&\r\n            result.interactivity_data.refresh_data.hasOwnProperty('control_tab') &&\r\n            result.interactivity_data.refresh_data.control_tab\r\n        ) {\r\n            spbcReloadAccordion(\r\n                result.interactivity_data.refresh_data.control_tab,\r\n                result.interactivity_data.update_text,\r\n            );\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Function Error\r\n     * @param {object} xhr\r\n     * @param {string} status\r\n     * @param {string} error\r\n     */\r\n    error( xhr, status, error ) {\r\n        let errorOutput = this.errorOutput;\r\n\r\n        console.log( '%c APBCT_AJAX_ERROR', 'color: red;' );\r\n        console.log( status );\r\n        console.log( error );\r\n        console.log( xhr );\r\n\r\n        if (status == 'error' && (error == '' || error == 'Not found')) {\r\n            if (!this.tryCount) {\r\n                this.tryCount = 0;\r\n                this.retryLimit = 30;\r\n            }\r\n            this.tryCount++;\r\n            console.log('Try #' + this.tryCount);\r\n            this.setCoefficients(this.state);\r\n            if (this.tryCount <= this.retryLimit) {\r\n                this.pause();\r\n                this.resume();\r\n                this.controller();\r\n                return;\r\n            }\r\n        }\r\n\r\n        if ( xhr.status === 200 ) {\r\n            if ( status === 'parsererror' ) {\r\n                errorOutput( 'Unexpected response from server. See console for details.', this.state );\r\n                console.log( '%c ' + xhr.responseText, 'color: pink;' );\r\n            } else {\r\n                let errorString = status;\r\n                if ( typeof error !== 'undefined' ) {\r\n                    errorString += ' Additional info: ' + error;\r\n                }\r\n                errorOutput( errorString, this.state );\r\n            }\r\n        } else if (xhr.status === 500) {\r\n            errorOutput( 'Internal server error.', this.state);\r\n        } else {\r\n            errorOutput('Unexpected response code: ' + xhr.status + '. Error: ' + status, this.state);\r\n        }\r\n\r\n        if ( this.progressbar ) {\r\n            this.progressbar.fadeOut('slow');\r\n        }\r\n\r\n        this.end();\r\n    };\r\n\r\n    /**\r\n     * Error Output\r\n     * @param {string} errorMsg\r\n     * @param {string} stage\r\n     */\r\n    errorOutput( errorMsg, stage ) {\r\n        spbcModal.open().putError( errorMsg + '<br>Stage: ' + stage);\r\n    };\r\n\r\n    /**\r\n     * Log Raw\r\n     * @param {htmlString|Element|Text|Array|jQuery} messageToLog\r\n     */\r\n    logRaw(messageToLog) {\r\n        jQuery('.spbc-scan-log-title').removeClass('spbc---hidden');\r\n        jQuery('.spbc_log-wrapper').removeClass('spbc---hidden');\r\n        jQuery('.spbc_log-wrapper .panel-body').prepend( messageToLog );\r\n    };\r\n\r\n    /**\r\n     * Log File Entry\r\n     * @param {array} items\r\n     */\r\n    logFileEntry(items) {\r\n        for ( let key in items ) {\r\n            if ( key ) {\r\n                this.logRaw(\r\n                    '<p class=\"spbc_log-line\">' +\r\n                    this.getSiteUTCShiftedTimeString() + ' - ' +\r\n                    items[key].path + ' - ' + items[key].module +\r\n                    '<b>: ' + items[key].status + '</b>' +\r\n                    '</p>');\r\n            }\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Log Stage Entry\r\n     * @param {obj} data\r\n     */\r\n    logStageEntry(data) {\r\n        if (typeof jQuery('.panel-body  .spbc_log-line span').first() !== 'undefined' &&\r\n            typeof jQuery('.panel-body  .spbc_log-line span').first()[0] !== 'undefined' &&\r\n            jQuery('.panel-body  .spbc_log-line span').first()[0].textContent === data.description\r\n        ) {\r\n            return;\r\n        }\r\n        this.logRaw( '<p class=\"spbc_log-line\">test ' +\r\n            this.getSiteUTCShiftedTimeString() + ' - ' + '<b>' +\r\n            data.title + '</b> ' + '<span>' + data.description + '</span></p>' );\r\n    };\r\n\r\n    /**\r\n     * Show Link For Shuffle Salts\r\n     * @param {string} message\r\n     */\r\n    showLinkForShuffleSalts(message) {\r\n        jQuery('#spbc_notice_about_shuffle_link').remove();\r\n        jQuery(jQuery('.spbc_tab--active .spbc_wrapper_field p')[1])\r\n            .after(\r\n                '<div style=\"text-align: center;\" id=\"spbc_notice_about_shuffle_link\">' +\r\n                '<a href=\"options-general.php?page=spbc&spbc_tab=settings_general#action-shuffle-salts-wrapper\">' +\r\n                message +\r\n                '</a>' +\r\n                '</div>',\r\n            );\r\n    }\r\n\r\n    /**\r\n     * Get Site UTC Shifted Time String\r\n     * @return {string}\r\n     */\r\n    getSiteUTCShiftedTimeString() {\r\n        let utcShiftedTs = false;\r\n        // gettings current system/browser offset\r\n        let currentBrowserOffset = new Date().getTimezoneOffset();\r\n        currentBrowserOffset = currentBrowserOffset * -1 * 1000 * 60;\r\n        // chek if global ct object is defined\r\n        if (typeof spbcScaner !== 'undefined' &&\r\n            typeof spbcScaner.timezone_shift !== 'undefined' &&\r\n            spbcScaner.timezone_shift !== false) {\r\n            utcShiftedTs = Date.now() - currentBrowserOffset + (spbcScaner.timezone_shift * 1000);\r\n        }\r\n        let ctDate = utcShiftedTs ? new Date(utcShiftedTs) : new Date();\r\n        // construct date string\r\n        let shortMonthName = new Intl.DateTimeFormat('en-US', {month: 'short'}).format;\r\n        let minutes = String(ctDate.getMinutes()).padStart(2, '0');\r\n        let seconds = String(ctDate.getSeconds()).padStart(2, '0');\r\n        return shortMonthName(ctDate) + ' ' +\r\n            ctDate.getDate() + ' ' + ctDate.getFullYear() + ' ' +\r\n            ctDate.getHours() + ':' + minutes + ':' + seconds;\r\n    }\r\n}\r\n"],"names":["SpbcMalwareScanner","first_start","active","root","settings","states","state","offset","amount","amount_coefficient","total_scanned","scan_percent","percent_completed","paused","button","spinner","progress_overall","progressbar","progressbar_text","timeout","state_timer","constructor","properties","let","key","console","log","jQuery","length","removeClass","this","actionControl","start","resume","controller","pause","Math","round","Date","getTime","getNextState","setPercents","children","filter","addClass","show","html","spbcScaner","button_scan_pause","css","display","setTimeout","result","data","opt","button_scan_resume","end","reload","hide","button_scan_perform","plug","document","location","spbcSendAJAXRequest","action","notJson","callback","params","obj","accordion","header","heightStyle","collapsible","spbcTblBulkActionsListen","spbcTblRowActionsListen","spbcTblPaginationListen","spbcTblSortListen","spbcStartShowHide","spbcScannerReloadScanInfo","insertBefore","method","type","success","successCallback","error","errorOutput","complete","context","spbcSettings","frontendAnalysisAmount","status","setCoefficients","coefficient","indexOf","percents","floor","text","response","responseText","msg","interactAccordion","total","processed_items","logRaw","logFileEntry","stage_data_for_logging","logStageEntry","undefined","cured","Number","showLinkForShuffleSalts","message","processedPercents","processed","title","hasOwnProperty","interactivity_data","update_text","refresh_data","do_refresh","control_tab","spbcReloadAccordion","xhr","tryCount","retryLimit","errorString","fadeOut","errorMsg","stage","spbcModal","open","putError","messageToLog","prepend","items","getSiteUTCShiftedTimeString","path","module","first","textContent","description","remove","after","utcShiftedTs","currentBrowserOffset","getTimezoneOffset","ctDate","timezone_shift","now","shortMonthName","Intl","DateTimeFormat","month","format","minutes","String","getMinutes","padStart","seconds","getSeconds","getDate","getFullYear","getHours"],"mappings":"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"}