{"version":3,"file":"spbc-scanner-plugin.min.js","sources":["spbc-scanner-plugin.js"],"sourcesContent":["'use strict';\n\n/**\n * class spbcMalwareScanner\n */\nclass spbcMalwareScanner {/* eslint-disable-line no-unused-vars */\n    first_start = true;\n\n    active = false;\n\n    root = '';\n    settings = [];\n    states = [\n        'get_cms_hashes',\n        'get_modules_hashes',\n        'clean_results',\n        'file_system_analysis',\n        'get_approved_hashes',\n        'get_denied_hashes',\n        'signature_analysis',\n        'heuristic_analysis',\n        'schedule_send_heuristic_suspicious_files',\n        'auto_cure_backup',\n        'auto_cure',\n        'outbound_links',\n        'frontend_analysis',\n        'important_files_listing',\n        'send_results',\n    ];\n    state = null;\n    offset = 0;\n    amount = 0;\n    amount_coefficient = 1;\n    total_scanned = 0;\n    scan_percent = 0;\n    percent_completed = 0;\n\n    paused = false;\n\n    button = null;\n    spinner = null;\n\n    progress_overall = null;\n    progressbar = null;\n    progressbar_text = null;\n\n    timeout = 60000;\n\n    state_timer = 0;\n\n    file_system_analysis_is_finished = false;\n    file_system_analysis_is_finished_run_once = false;\n\n    /**\n     * constructor\n     * @param {array} properties\n     */\n    constructor( properties ) {\n        console.log('init');\n        if (jQuery('#spbcscan-results-log-module').length) {\n            jQuery('.spbc-scan-log-title').removeClass('spbc---hidden');\n        }\n\n        // Crunch for cure backups\n        if ( typeof properties['settings']['auto_cure'] !== 'undefined' ) {\n            properties['settings']['scanner__auto_cure_backup'] = '1';\n        }\n\n        for ( let key in properties ) {\n            if ( typeof this[key] !== 'undefined' ) {\n                this[key] = properties[key];\n            }\n        }\n    };\n\n    /**\n     * Function Action Control\n     */\n    actionControl() {\n        if (this.state === null && ! this.file_system_analysis_is_finished) {\n            this.start();\n        } else if (this.paused) {\n            this.resume();\n            this.controller();\n        } else {\n            this.pause();\n        }\n    };\n\n    /**\n     * Function Start\n     */\n    start() {\n        this.active = true;\n        this.state_timer = Math.round(new Date().getTime() /1000);\n\n        this.state = this.getNextState( null );\n\n        this.setPercents( 0 );\n        this.scan_percent = 0;\n        this.offset = 0;\n        this.progress_overall.children('span')\n            .removeClass('spbc_bold')\n            .filter('.spbc_overall_scan_status_' + this.state)\n            .addClass('spbc_bold');\n\n        this.progressbar.show(500);\n        this.progress_overall.show(500);\n        this.button.html(spbcScaner.button_scan_pause);\n        this.spinner.css({display: 'inline'});\n\n        setTimeout(() => {\n            this.controller();\n        }, 1000);\n    };\n\n    /**\n     * Function Pause\n     * @param {*} result\n     * @param {*} data\n     * @param {*} opt\n     */\n    pause( result, data, opt ) {\n        console.log('PAUSE');\n        this.button.html(spbcScaner.button_scan_resume);\n        this.spinner.css({display: 'none'});\n        this.paused = true;\n        this.active = false;\n    };\n\n    /**\n     * Function Resume\n     * @param {*} opt\n     */\n    resume( opt ) {\n        console.log('RESUME');\n        this.button.html(spbcScaner.button_scan_pause);\n        this.spinner.css({display: 'inline'});\n        this.paused = false;\n        this.active = true;\n    };\n\n    /**\n     * Function End\n     * @param {bool} reload\n     */\n    end( reload ) {\n        this.progressbar.hide(500);\n        this.progress_overall.hide(500);\n        this.button.html(spbcScaner.button_scan_perform);\n        this.spinner.css({display: 'none'});\n        this.state = null;\n        this.total_links = 0;\n        this.plug = false;\n        this.total_scanned = 0;\n        this.active = false;\n\n        if (reload) {\n            document.location = document.location;\n        } else {\n            // spbcSendAJAXRequest(\n            //     {action: 'spbc_scanner_tab__reload_accordion'},\n            //     {\n            //         notJson: true,\n            //         callback: function(result, data, params, obj) {\n            //             jQuery(obj).accordion('destroy')\n            //                 .html(result)\n            //                 .accordion({\n            //                     header: 'h3',\n            //                     heightStyle: 'content',\n            //                     collapsible: true,\n            //                     active: false,\n            //                 });\n            //             spbcTblBulkActionsListen();\n            //             spbcTblRowActionsListen();\n            //             spbcTblPaginationListen();\n            //             spbcTblSortListen();\n            //             spbcStartShowHide();\n            //             spbc_scanner__reload_scan_info();\n            //         },\n            //     },\n            //     jQuery('#spbc_scan_accordion'),\n            // );\n\n            if (!jQuery('#spbc_scanner_clear').length) {\n                let clearLink = '<p id=\"spbc_scanner_clear\" ' +\n                    'class=\"spbc_hint spbc_hint-send_security_log spbc_hint--link spbc_hint--top_right\" ' +\n                    'onclick=\"spbc_scanner_button_clear_scan_results()\">Clear scanner logs</p><br>';\n                jQuery(clearLink).insertBefore('#spbcscan-scanner-caption');\n            }\n        }\n    };\n\n    /**\n     * Function Controller\n     * @param {obj} result\n     */\n    controller( result ) {\n        console.log(this.state);\n\n        if ( this.state === 'file_system_analysis' && this.file_system_analysis_is_finished && ( result.end !== true && result.end !== 1 )) {\n            return;\n        }\n        // if ( this.state === 'file_system_analysis' && this.file_system_analysis_is_finished ) {\n        //     this.file_system_analysis_is_finished_run_once = true;\n        //     // return;\n        // }\n        // if ( this.state === 'file_system_analysis' && ( result.end === true || result.end === 1 )) {\n        //     this.file_system_analysis_is_finished++;\n        //     return;\n        // }\n\n        // The current stage is over. Switching to the new one\n        if ( typeof result !== 'undefined' && result.end ) {\n            this.state = this.getNextState( this.state );\n\n            // End condition\n            if (typeof this.state === 'undefined') {\n                this.end();\n                return;\n            }\n\n            // Set percent to 0\n            this.setPercents( 0 );\n            this.scan_percent = 0;\n            this.offset = 0;\n\n            // Changing visualizing of the current stage\n            this.progress_overall.children('span')\n                .removeClass('spbc_bold')\n                .filter('.spbc_overall_scan_status_' + this.state)\n                .addClass('spbc_bold');\n        }\n\n        // Break execution if paused\n        if ( this.paused === true ) {\n            return;\n        }\n\n        // // AJAX params\n        let data = {\n            action: 'spbc_scanner_controller_front',\n            method: this.state,\n            offset: this.offset,\n        };\n\n        let params = {\n            type: 'GET',\n            success: this.success,\n            callback: this.successCallback,\n            error: this.error,\n            errorOutput: this.errorOutput,\n            complete: null,\n            context: this,\n            timeout: 120000,\n        };\n\n        switch (this.state) {\n        case 'get_modules_hashes': this.amount = 2; break;\n        case 'clear_table': this.amount = 10000; break;\n        case 'file_system_analysis': this.amount = 700; break;\n        case 'auto_cure': this.amount = 5; break;\n        case 'outbound_links': this.amount = 10; break;\n        case 'frontend_analysis': this.amount = spbcSettings.frontendAnalysisAmount; break;\n        case 'signature_analysis': this.amount = 10; data.status = 'UNKNOWN,MODIFIED,OK,INFECTED,ERROR'; break;\n        case 'heuristic_analysis': this.amount = 4; data.status = 'UNKNOWN,MODIFIED,OK,INFECTED,ERROR'; break;\n        case 'schedule_send_heuristic_suspicious_files': this.amount = 1; break;\n        }\n\n        data.amount = Math.round(this.amount * this.amount_coefficient);\n\n        spbcSendAJAXRequest(\n            data,\n            params,\n            jQuery('#spbc_scan_accordion'),\n        );\n    };\n\n    /**\n     * Set Coefficients\n     * @param {string} state\n     */\n    setCoefficients( state ) {\n        let coefficient = this.amount_coefficient;\n        switch (state) {\n        case 'file_system_analysis': coefficient *= 1.5; break;\n        }\n        this.amount_coefficient = coefficient;\n    };\n\n    /**\n     * Get Next State\n     * @param {string} state\n     * @return {number}\n     */\n    getNextState( state ) {\n        state = state === null ? this.states[0] : this.states[this.states.indexOf( state ) + 1];\n\n        if (typeof this.settings['scanner__' + state] !== 'undefined' && +this.settings['scanner__' + state] === 0) {\n            state = this.getNextState( state );\n        }\n\n        return state;\n    };\n\n    /**\n     * Set Percents\n     * @param {number} percents\n     */\n    setPercents( percents ) {\n        this.percent_completed = Math.floor( percents * 100 ) / 100;\n        this.progressbar.progressbar( 'option', 'value', this.percent_completed );\n        this.progressbar_text.text( spbcScaner['progressbar_' + this.state] + ' - ' + this.percent_completed + '%' );\n    };\n\n    /**\n     * Function Success\n     * @param {obj} response\n     */\n    success( response ) {\n        if ( !! response.error ) {\n            this.error(\n                {status: 200, responseText: response.error},\n                response.error,\n                response.msg,\n            );\n        } else {\n            if ( this.successCallback ) {\n                this.successCallback( response, this.data, this.obj );\n            }\n        }\n    };\n\n    // Processing response from backend\n    /**\n     * Success Callback\n     * @param {obj} result\n     */\n    successCallback( result ) {\n        console.log( result );\n\n        // if ( this.state === 'file_system_analysis' && this.file_system_analysis_is_finished_run_once ) {\n        //     return;\n        // }\n        // if ( this.state === 'file_system_analysis' && ( result.end === true || result.end === 1 ) ) {\n        //     this.file_system_analysis_is_finished++;\n        // }\n\n        if ( typeof result.total !== 'undefined' ) {\n            this.scan_percent = 100 / result.total;\n        }\n\n        if ( typeof result.processed_items !== 'undefined') {\n            if ( this.state === 'heuristic_analysis' && typeof result.total !== 0 ) {\n                this.logRaw('<h3 class=\"spbc_log-block_header\">Heuristic Analysis</h3>');\n            }\n            if ( this.state === 'signature_analysis' && typeof result.total !== 0 ) {\n                this.logRaw('<h3 class=\"spbc_log-block_header\">Signature Analysis</h3>');\n            }\n\n            this.logFileEntry( result.processed_items );\n        }\n\n        if ( typeof result.stage_data_for_logging !== 'undefined') {\n            this.logStageEntry( result.stage_data_for_logging );\n        }\n\n        // Add link on shuffle salt if cured\n        if (result.cured !== undefined && Number(result.cured) > 0) {\n            this.showLinkForShuffleSalts(result.message);\n        }\n\n        if ( result.end !== true && result.end !== 1 ) {\n            this.setPercents( this.percent_completed + result.processed * this.scan_percent );\n            this.offset = this.offset + result.processed;\n            this.controller( result );\n            if ( this.state === 'file_system_analysis' ) {\n                this.offset += this.amount;\n                setTimeout(() => {\n                    this.controller( result );\n                }, 300);\n            }\n        } else {\n            console.log( this.state +\n                ' stage took ' +\n                ( Math.round(new Date().getTime() /1000) - this.state_timer ) +\n                ' seconds to complete' );\n            if ( this.state === 'file_system_analysis' ) {\n                this.file_system_analysis_is_finished = true;\n            }\n            this.state_timer = Math.round(new Date().getTime()/1000);\n            this.setPercents( 100 );\n            this.scan_percent = 0;\n            this.offset = 0;\n            setTimeout(() => {\n                this.controller( result );\n            }, 300);\n        }\n    };\n\n    /**\n     * Function Error\n     * @param {object} xhr\n     * @param {string} status\n     * @param {string} error\n     */\n    error( xhr, status, error ) {\n        let errorOutput = this.errorOutput;\n\n        console.log( '%c APBCT_AJAX_ERROR', 'color: red;' );\n        console.log( status );\n        console.log( error );\n        console.log( xhr );\n\n        // if (status == 'file_system_analysis No files to scan' && this.state === 'file_system_analysis') {\n            // this.file_system_analysis_is_finished = true;\n            // this.pause();\n            // this.resume();\n            // this.controller();\n            // return;\n        // }\n\n        if (status == 'error' && (error == '' || error == 'Not found')) {\n            if (!this.tryCount) {\n                this.tryCount = 0;\n                this.retryLimit = 30;\n            }\n            this.tryCount++;\n            console.log('Try #' + this.tryCount);\n            this.setCoefficients(this.state);\n            if (this.tryCount <= this.retryLimit) {\n                this.pause();\n                this.resume();\n                this.controller();\n                return;\n            }\n        }\n\n        if ( xhr.status === 200 ) {\n            if ( status === 'parsererror' ) {\n                errorOutput( 'Unexpected response from server. See console for details.', this.state );\n                console.log( '%c ' + xhr.responseText, 'color: pink;' );\n            } else {\n                let errorString = status;\n                if ( typeof error !== 'undefined' ) {\n                    errorString += ' Additional info: ' + error;\n                }\n                errorOutput( errorString, this.state );\n            }\n        } else if (xhr.status === 500) {\n            errorOutput( 'Internal server error.', this.state);\n        } else {\n            errorOutput('Unexpected response code: ' + xhr.status + '. Error: ' + status, this.state);\n        }\n\n        if ( this.progressbar ) {\n            this.progressbar.fadeOut('slow');\n        }\n\n        this.end();\n    };\n\n    /**\n     * Error Output\n     * @param {string} errorMsg\n     * @param {string} stage\n     */\n    errorOutput( errorMsg, stage ) {\n        spbcModal.open().putError( errorMsg + '<br>Stage: ' + stage);\n    };\n\n    /**\n     * Log Raw\n     * @param {htmlString|Element|Text|Array|jQuery} messageToLog\n     */\n    logRaw(messageToLog) {\n        jQuery('.spbc-scan-log-title').removeClass('spbc---hidden');\n        jQuery('.spbc_log-wrapper').removeClass('spbc---hidden');\n        jQuery('.spbc_log-wrapper .panel-body').prepend( messageToLog );\n    };\n\n    /**\n     * Log File Entry\n     * @param {array} items\n     */\n    logFileEntry(items) {\n        for ( let key in items ) {\n            if ( key ) {\n                this.logRaw( '<p class=\"spbc_log-line\">' +\n                this.getSiteUTCShiftedTimeString() + ' - ' +\n                items[key].path + '<b>: ' + items[key].status +\n                '</b></p>' );\n            }\n        }\n    };\n\n    /**\n     * Log Stage Entry\n     * @param {obj} data\n     */\n    logStageEntry(data) {\n        if (typeof jQuery('.panel-body  .spbc_log-line span').first() !== 'undefined' &&\n            typeof jQuery('.panel-body  .spbc_log-line span').first()[0] !== 'undefined' &&\n            jQuery('.panel-body  .spbc_log-line span').first()[0].textContent === data.description\n        ) {\n            return;\n        }\n        this.logRaw( '<p class=\"spbc_log-line\">test ' +\n            this.getSiteUTCShiftedTimeString() + ' - ' + '<b>' +\n            data.title + '</b> ' + '<span>' + data.description + '</span></p>' );\n    };\n\n    /**\n     * Show Link For Shuffle Salts\n     * @param {string} message\n     */\n    showLinkForShuffleSalts(message) {\n        jQuery('#spbc_notice_about_shuffle_link').remove();\n        jQuery(jQuery('.spbc_tab--active .spbc_wrapper_field p')[1])\n            .after(\n                '<div style=\"text-align: center;\" id=\"spbc_notice_about_shuffle_link\">' +\n                '<a href=\"options-general.php?page=spbc&spbc_tab=settings_general#action-shuffle-salts-wrapper\">' +\n                message +\n                '</a>' +\n                '</div>',\n            );\n    }\n\n    /**\n     * Get Site UTC Shifted Time String\n     * @return {string}\n     */\n    getSiteUTCShiftedTimeString() {\n        let utcShiftedTs = false;\n        // gettings current system/browser offset\n        let currentBrowserOffset = new Date().getTimezoneOffset();\n        currentBrowserOffset = currentBrowserOffset * -1 * 1000 * 60;\n        // chek if global ct object is defined\n        if (typeof spbcScaner !== 'undefined' &&\n            typeof spbcScaner.timezone_shift !== 'undefined' &&\n            spbcScaner.timezone_shift !== false) {\n            utcShiftedTs = Date.now() - currentBrowserOffset + (spbcScaner.timezone_shift * 1000);\n        }\n        let ctDate = utcShiftedTs ? new Date(utcShiftedTs) : new Date();\n        // construct date string\n        let shortMonthName = new Intl.DateTimeFormat('en-US', {month: 'short'}).format;\n        let minutes = String(ctDate.getMinutes()).padStart(2, '0');\n        let seconds = String(ctDate.getSeconds()).padStart(2, '0');\n        return shortMonthName(ctDate) + ' ' +\n            ctDate.getDate() + ' ' + ctDate.getFullYear() + ' ' +\n            ctDate.getHours() + ':' + minutes + ':' + seconds;\n    }\n}\n"],"names":["spbcMalwareScanner","first_start","active","root","settings","states","state","offset","amount","amount_coefficient","total_scanned","scan_percent","percent_completed","paused","button","spinner","progress_overall","progressbar","progressbar_text","timeout","state_timer","file_system_analysis_is_finished","file_system_analysis_is_finished_run_once","constructor","properties","let","key","console","log","jQuery","length","removeClass","this","actionControl","resume","controller","pause","start","Math","round","Date","getTime","getNextState","setPercents","children","filter","addClass","show","html","spbcScaner","button_scan_pause","css","display","setTimeout","result","data","opt","button_scan_resume","end","reload","hide","button_scan_perform","total_links","plug","document","location","insertBefore","action","method","params","type","success","callback","successCallback","error","errorOutput","complete","context","spbcSettings","frontendAnalysisAmount","status","spbcSendAJAXRequest","setCoefficients","coefficient","indexOf","percents","floor","text","response","responseText","msg","obj","total","processed_items","logRaw","logFileEntry","stage_data_for_logging","logStageEntry","undefined","cured","Number","showLinkForShuffleSalts","message","processed","xhr","tryCount","retryLimit","errorString","fadeOut","errorMsg","stage","spbcModal","open","putError","messageToLog","prepend","items","getSiteUTCShiftedTimeString","path","first","textContent","description","title","remove","after","utcShiftedTs","currentBrowserOffset","getTimezoneOffset","ctDate","timezone_shift","now","shortMonthName","Intl","DateTimeFormat","month","format","minutes","String","getMinutes","padStart","seconds","getSeconds","getDate","getFullYear","getHours"],"mappings":"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"}