var spbc_error_msg_count = 0;

jQuery(document).ready(function () {

    // Count error messages each 100ms
    var spbc_timer = setTimeout(spbc_check_new_files, 1000);

});

function spbc_check_new_files() {
    // If there more messages than were, fire AJAX request to get data
    if (spbc_error_msg_count < spbc_get_error_msgs().length) {
        spbc_error_msg_count = spbc_get_error_msgs().length;
        spbc_get_latest_blocked_file();
        spbc_error_msg_count = spbc_error_msg_count - 1;
        // If there less messages than were, recount
    } else if (spbc_error_msg_count > spbc_get_error_msgs().length) {
        spbc_error_msg_count = spbc_get_error_msgs().length;
    }
    spbc_timer = setTimeout(spbc_check_new_files, 1000);
}

function spbc_get_error_msgs() {
    let media_error = jQuery("#media-upload-error .error")
    let upload_error = jQuery(".upload-error-message")
    if (media_error.length)
        return media_error;
    else if (upload_error.length)
        return upload_error;
    else
        return [];
}

//Fires AJAX request to get more info about the block
function spbc_get_latest_blocked_file() {
    var data = {action: "spbc_check_file_block", timestamp: spbc_timestamp()},
        params = {callback: spbc_check_file_block__callback},
        obj = spbc_get_error_msgs().first();
    spbc_sendAJAXRequest(data, params, obj);
}

// Callback. Sets correct error message with details
function spbc_check_file_block__callback(result, data, params, obj) {
    if (result.blocked) {
        var pattern = result.pattern.CRITICAL || result.pattern.DANGER || result.pattern.SUSPICIOUS;
        obj.html(result.warning + "<br>" + result.pattern_title + " " + pattern);
    }
}