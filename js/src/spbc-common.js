function spbc_timestamp(){
	return Math.floor(+new Date() / 1000);
}

// Hightlights element
function spbcHighlightElement(id, times){
	times = times-1 || 0;
	jQuery("html, body").animate({ scrollTop: jQuery(jQuery('#'+id)).offset().top - 100 }, "slow");
	jQuery('#'+id).addClass('spbc_highlighted');
	jQuery('#'+id).animate({outlineColor: "rgba(255, 0, 0, 1.0)" }, 400, 'linear', function(){
		jQuery('#'+id).animate({outlineColor: "rgba(255, 0, 0, 0.0)" }, 400, 'linear', function(){
			if(times>0){
				spbcHighlightElement(id, times);
			}else{
				jQuery('#'+id).removeClass('spbc_highlighted');
			}
		});
	});
}

function spbc_sendAJAXRequest(data, params, obj){

	var dataType    = params.notJson ? 'text' : 'json';

	// Default params
	var button      = params.button      || null;
	var spinner     = params.spinner     || null;
	var progressbar = params.progressbar || null;
	var callback    = params.callback    || null;
	var notJson     = params.notJson     || null;
	var timeout     = params.timeout     || 15000;
	var obj         = obj                || null;
	var context     = params.context     || this;

	// Button and spinner
	if(button)  {button.setAttribute('disabled', 'disabled'); button.style.cursor = 'not-allowed'; }
	if(spinner) jQuery(spinner).css('display', 'inline');

	// Adding security code
	data.security = spbcSettings.ajax_nonce;
	data.no_cache = Math.random();

	// Using passed successCallback() or default
	var success = params.success || function(result){
		if(button){
			button.removeAttribute('disabled');
			button.style.cursor = 'pointer';
		}

		if(spinner) {
			jQuery(spinner).css('display', 'none');
		}

		if(!notJson && typeof result !== 'object'){
			result = JSON.parse(result);
		}

		if(result.error){
			setTimeout(function(){ if(progressbar) progressbar.fadeOut('slow'); }, 1000);
			let error_comment = typeof result.error_comment !== 'undefined' ? result.error_comment : null;
			console.log(error_comment);
			errorOutput( result.error, error_comment );
		}else if(callback){
				callback(result, data, params, obj);
		}
	};

	// Using passed successCallback() or default
	var error = params.error || function(jqXHR, textStatus, errorThrown){
		if(button){
			button.removeAttribute('disabled');
			button.style.cursor = 'pointer';
		}
		if(spinner){
			jQuery(spinner).css('display', 'none');
		}

		console.log( '%c APBCT_AJAX_ERROR', 'color: red;' );
		console.log( textStatus );
		console.log( errorThrown );
		console.log( jqXHR );

		errorOutput( textStatus );
	};

	var errorOutput = params.errorOutput || function( msg ){};

	jQuery.ajax({
		context:  context,
		type:     "POST",
		url:      spbcSettings.ajaxurl,
		data:     data,
		dataType: dataType,
		success:  success,
		error:    error,
		timeout:  timeout,
	});
}