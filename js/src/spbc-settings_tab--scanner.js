function spbc_popup_tip___show(show_icon){

	var tip_title = show_icon.attr('spbc_tip_title') || null;
	var	tip_text  = show_icon.attr('spbc_tip_text')  || null;
	var remove_desc_func = function(e){

		if(
			typeof e === 'undefined' ||
			(
				(jQuery(e.target).parent('.spbc_popup_tip--wrapper').length == 0 || jQuery(e.target).hasClass('spbc_popup_tip--icon---cancel')) &&
				!jQuery(e.target).hasClass('spbc_popup_tip--icon---show')
			)
		){
			jQuery('.spbc_popup_tip--wrapper').hide();
			jQuery(document).off('click', remove_desc_func);
		}
	};

	remove_desc_func();

	show_icon.after("<div class='spbc_popup_tip--wrapper'></div>");

	var obj = jQuery('.spbc_popup_tip--wrapper');

	obj.empty()
		.append("<div class='spbc_popup_tip--angle'></div>")
		.css({
			top: show_icon.position().top - 2,
			left: show_icon.position().left + 25
		});
	obj.append("<i class='spbc_popup_tip--icon---cancel icon-cancel'></i>")
		.append("<h3 class='spbc_popup_tip--title'>" + tip_title + "</h3>")
		.append("<p class='spbc_popup_tip--text'>" + tip_text + "</p>");

	jQuery(document).on('click', remove_desc_func);
	show_icon.parents('tr').on('mouseout', remove_desc_func);
}

function spbc_scanner_button_file_view_event(obj){
	var self = jQuery(obj);
	var data = {
		action: 'spbc_scanner_file_view',
		file_id: self.parents('.row-actions').attr('uid'),
	};
	var params = {
		spinner: self.parent().siblings('.tbl-preloader--tiny'),
		callback: spbc_scannerButtonView_callback,
		errorOutput: function(msg){ spbcModal.open().putError( msg ); },
	};
	spbc_sendAJAXRequest(data, params);
}

function spbc_scanner_button_page_view_event(obj){
	var self = jQuery(obj);
	var data = {
		action: 'spbc_scanner_page_view',
		page_url: self.parents('.row-actions').attr('uid'),
	};
	var params = {
		spinner: self.parent().siblings('.tbl-preloader--tiny'),
		callback: spbc_scannerButtonView_callback,
		errorOutput: function(msg){ spbcModal.open().putError( msg ); },
	};
	spbc_sendAJAXRequest(data, params);
}

function spbc_scannerButtonView_callback(result, data, params){

	console.log('FILE_VIEWED');

	let row_template = '<div class="spbc_view_file_row_wrapper"><span class="spbc_view_file_row_num">%s</span><p class="spbc_view_file_row">%s</p><br /></div>';

	for(let row in result.file){
		jQuery('#spbc_dialog').append(row_template.printf(row, result.file[row]));
	}

	let content_height = Object.keys(result.file).length * 19 < 76 ? 76 : Object.keys(result.file).length * 19,
		visible_height = (document.documentElement.clientHeight) / 100 * 75,
		overflow       = content_height < visible_height ? 'hidden' : 'scroll',
		height         = overflow === 'scroll' ? visible_height : content_height;

	jQuery('#spbc_dialog').dialog({
		modal:true, 
		title: result.file_path,
		position: { my: "center top", at: "center top+100px" , of: window },
		width: +(jQuery('#wpwrap').width() / 100 * 90),
		show: { effect: "blind", duration: 500 },
		draggable: false,
		resizable: false,
		closeText: "X",
		classes: {"ui-dialog": 'spbc---top'},
		open: function(event, ui) {
			event.target.style.overflow = overflow;
			jQuery('#spbc_dialog').height(height);
		},
		beforeClose: function(event, ui) {
			document.body.style.overflow = 'auto';
			jQuery('#spbc_dialog').empty();
		},
	});
}

function spbc_scanner_button_file_view_bad_event(obj){
	var self = jQuery(obj);
	var data = {
		action: 'spbc_scanner_file_view',
		file_id: self.parents('.row-actions').attr('uid'),
	};
	var params = {
		spinner: self.parent().siblings('.tbl-preloader--tiny'),
		callback: spbc_scannerButtonViewBad_callback,
		errorOutput: function(msg){ spbcModal.open().putError( msg ); },
	};
	spbc_sendAJAXRequest(data, params);
}

function spbc_scanner_button_page_view_bad_event(obj){
	var self = jQuery(obj);
	var data = {
		action: 'spbc_scanner_page_view',
		page_url: self.parent().attr('uid'),
	};
	var params = {
		spinner: self.parent().siblings('.tbl-preloader--tiny'),
		callback: spbc_scannerButtonViewBad_callback,
		errorOutput: function(msg){ spbcModal.open().putError( msg ); },
	};
	spbc_sendAJAXRequest(data, params);
}

function spbc_scannerButtonViewBad_callback(result, data, params){

	console.log('FILE_VIEWED_BAD_CODE');

	console.log(arguments);

	var row_template     = '<div class="spbc_view_file_row_wrapper"><span class="spbc_view_file_row_num">%s</span><p class="spbc_view_file_row">%s</p><br /></div>',
		row_template_bad = '<div class="spbc_view_file_row_wrapper" style="background: rgba(200,40,40,0.8);"><span class="spbc_view_file_row_num">%s</span><p class="spbc_view_file_row">%s</p><br /></div>',
		str_nums = [];

	result.weak_spots = JSON.parse(result.weak_spots);
	console.log(result.weak_spots)
	for(let severity in result.weak_spots){
		str_nums = str_nums.concat(Object.keys(result.weak_spots[severity]));
	}
	str_nums = [...new Set(str_nums)].sort(); // Sort bad line

	for(let str_num in str_nums){

		let row = +str_nums[str_num],
			display_depth = 2;

		// Display only existing lines of file
		for(let curr_row = row - display_depth; curr_row <= row + display_depth; curr_row++ ){
			if( typeof result.file[curr_row] !== 'undefined' ){
				let is_bad_string = (row === curr_row)
				let unformatted_row
				let highlited_row
				if (is_bad_string){
					unformatted_row = row_template_bad
				} else {
					unformatted_row = row_template
				}
				let weak_spots = Object.entries(result.weak_spots)
				console.log(weak_spots)
				console.log('unformatted_row' + unformatted_row)
				console.log('curr_row' + curr_row)
				console.log('result.file[curr_row]' + result.file[curr_row])
				if (is_bad_string){
					highlited_row = unformatted_row.printf(curr_row, result.file[curr_row]);
				} else {
					highlited_row = unformatted_row.printf(curr_row, result.file[curr_row]);
				}
				console.log('formatted row: [' + highlited_row + ']')
				console.log('')
				jQuery('#spbc_dialog').append(highlited_row);
			}
		}

		// Placing an empty string between results
		jQuery('#spbc_dialog').append(row_template.    printf('', ''));
	}

	 // Removing last empty string
	jQuery('#spbc_dialog div').last().remove();

	let content_height = jQuery('#spbc_dialog div').length * 19 < 76 ? 76 : jQuery('#spbc_dialog div').length * 19,
		visible_height = (document.documentElement.clientHeight) / 100 * 75,
		overflow       = content_height < visible_height ? 'no_scroll' : 'scroll',
		height         = overflow === 'scroll' ? visible_height : content_height;

	jQuery('#spbc_dialog').dialog({
		modal:true, 
		title: result.file_path,
		position: { my: "center top", at: "center top+100px" , of: window },
		width: +(jQuery('#wpwrap').width() / 100 * 90),
		show: { effect: "blind", duration: 500 },
		draggable: true,
		resizable: false,
		closeText: "X",
		classes: {"ui-dialog": 'spbc---top'},
		open: function(event, ui) {
			event.target.style.overflow = overflow;
			jQuery('#spbc_dialog').height(height);
		},
		beforeClose: function(event, ui) {
			document.body.style.overflow = 'auto';
			jQuery('#spbc_dialog').empty();
		},
	});
}

function spbc_scanner_button_file_compare_event(obj){
	var self = jQuery(obj);
	var data = {
		action: 'spbc_scanner_file_compare',
		file_id: self.parents('.row-actions').attr('uid'),
	};
	var params = {
		spinner: self.parent().siblings('.tbl-preloader--tiny'),
		callback: spbc_scannerButtonFileCompare_callback,
		errorOutput: function(msg){ spbcModal.open().putError( msg ); },
	};
	spbc_sendAJAXRequest(data, params);
}

function spbc_scannerButtonFileCompare_callback(result, data, params){

	console.log('FILE_COMPARED');

	let row_template = '<div class="spbc_compare_file_row_wrapper"><p class="spbc_compare_file_row">%s</p><span class="spbc_compare_file_row_num">%s</span><p class="spbc_compare_file_row">%s</p><br /></div>';
	let row_template_bad = '<div class="spbc_compare_file_row_wrapper" style="background: rgba(200,40,40,0.8);"><p class="spbc_compare_file_row">%s</p><span class="spbc_compare_file_row_num">%s</span><p class="spbc_compare_file_row">%s</p><br /></div>';

	jQuery('#spbc_dialog').append(row_template.printf('<span class="spbc_compare_file_headings">Modified</span>', 'Line', '<span class="spbc_compare_file_headings">Original</span>'));

	for(var row=1, prev = false, next = false; typeof result.file[row] != 'undefined' || typeof result.file_original[row] != 'undefined'; row++){

		if(typeof result.file[row] == 'undefined')          result.file[row] = '';
		if(typeof result.file_original[row] == 'undefined') result.file_original[row] = '';

		// Display only existing lines of file
		if(result.difference.indexOf(row) != -1){
			for(let display_depth = 2, curr_row = row - display_depth; curr_row <= row + display_depth; curr_row++ ){
				if( typeof result.file[curr_row] !== 'undefined' && typeof result.file_original[row] !== 'undefined') {
					jQuery('#spbc_dialog').append(
						(row === curr_row ? row_template_bad : row_template).printf(
							result.file[curr_row] ? result.file[curr_row] : '',
							curr_row,
							result.file_original[curr_row] ? result.file_original[curr_row] : ''
						)
					);
				}
			}
			jQuery('#spbc_dialog').append(row_template.    printf('', '', ''));
		}
	}
	
	var content_height = jQuery('#spbc_dialog div').length * 19 + 19,
		visible_height = (document.documentElement.clientHeight) / 100 * 75,
		overflow = content_height < visible_height ? 'no_scroll' : 'scroll',
		height = overflow === 'scroll' ? visible_height : content_height;

	jQuery('#spbc_dialog').dialog({
		modal:true, 
		title: result.file_path,
		position: { my: "center top", at: "center top+100px" , of: window },
		width: +(jQuery('#wpwrap').width() / 100 * 90),
		height: height,
		show: { effect: "blind", duration: 500 },
		draggable: true,
		resizable: true,
		closeText: "X",
		classes: {"ui-dialog": 'spbc---top'},
		open: function(event, ui) {
			document.body.style.overflow = 'hidden';
			event.target.style.overflow = overflow;
			jQuery('#spbc_dialog').height(height);
		},
		beforeClose: function(event, ui) {
			document.body.style.overflow = 'auto';
			jQuery('#spbc_dialog').empty();
		}
	});
}

jQuery(document).ready(function(){

	// EVENT HADLING
	spbc_tbl__bulk_actions__listen(); // Table. Row bulk handler
	spbc_tbl__row_actions__listen();  // Table. Row actions handler
	spbc_tbl__pagination__listen();   // Table. Pagination handler
	spbc_tbl__sort__listen();         // Table. Sort handler
	
	spbcStartShowHide();

	// Preparing progressbar
	jQuery('#spbc_scaner_progress_bar').progressbar({
		value: 0,
		create: function( event, ui ) {
			event.target.style.position = 'relative';
			event.target.style.marginBottom = '12px';
		},
		change: function(event, ui){
			jQuery('.spbc_progressbar_counter span').text(jQuery(event.target).progressbar('option', 'value') + ' %');
		},
	});
	
	// Preparing accordion
	jQuery('#spbc_scan_accordion').accordion({
		header: "h3",
		heightStyle: 'content',
		collapsible: true,
		active: false,
		activate: function( event, ui ) {
			if( ui.oldPanel.length === 0 && ui.oldHeader.length === 0 )
				jQuery("#spbc_scan_accordion").accordion("option", "classes.ui-accordion-content", "ui-corner-bottom spbc-overflow--visible");
		},
		beforeActivate: function( event, ui ) {
			if( ui.oldPanel.length === 1 && ui.oldHeader.length === 1 )
				jQuery("#spbc_scan_accordion").accordion("option", "classes.ui-accordion-content", "ui-corner-bottom");
		}
	});

	// Init scanner plugin
	window.spbc_scanner = new spbcMalwareScanner({
		settings: spbcScaner.settings,
		states: spbcScaner.states,
		button: jQuery('#spbc_perform_scan'),
		spinner: jQuery('#spbc_perform_scan').next(),
		callback: null,
		progress_overall: jQuery('#spbc_scaner_progress_overall'),
		progressbar: jQuery('#spbc_scaner_progress_bar'),
		progressbar_text: jQuery('.spbc_progressbar_counter span'),
		wrapper: document.getElementsByClassName('spbc_unchecked_file_list'),
		warnings: {
		    long_scan: jQuery('.spbc_hint_warning__long_scan'),
            outdated:  jQuery('.spbc_hint_warning__outdated')
        }
	});

	jQuery(document).on('click', '.spbc_popup_tip--icon---show', function(){
		spbc_popup_tip___show( jQuery( this ) );
	});

	jQuery('#spbc_perform_scan').on('click', function(){
		spbc_scanner.actionControl();
	});

	//DEBUG
	// Clear table
	jQuery('#spbc_scanner_clear').on('click', function(){

		if( ! confirm('Do you wanna clear the table with file scan results?') )
			return;

		console.log('CLEAR');

		spbc_sendAJAXRequest(
			{ action: 'spbc_scanner_clear', },
			{
				type: 'GET',
				successCallback: function(){ document.location = document.location },
				complete: null,
				errorOutput: null,
				context: this,
				timeout: 40000
			},
		);
	});

});