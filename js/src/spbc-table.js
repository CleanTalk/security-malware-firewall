spbc_bulk_action = null;

/**
 * Reloads scanner accordion and set all the listeners
 */
function spbc_reload_accordion(){
	spbc_sendAJAXRequest(
		{action: 'spbc_scanner_tab__reload_accordion'},
		{
			notJson: true,
			callback: function(result, data, params, obj){
				jQuery(obj).accordion('destroy');
				jQuery(obj).html(result);
				jQuery(obj).accordion({
					header: 'h3',
					heightStyle: 'content',
					collapsible: true,
					active: false,
				});
				spbc_tbl__bulk_actions__listen();
				spbc_tbl__row_actions__listen();
				spbc_tbl__pagination__listen();
				spbc_tbl__sort__listen();
				spbcStartShowHide();
			},
		},
		jQuery('#spbc_scan_accordion')
	);
}

// TABLE BULK ACTIONS
function spbc_tbl__bulk_actions__listen(){

	jQuery('.tbl-bulk_actions-all--apply')
		.off('click')
		.on('click', function(){

		if ( spbc_scanner.active ) {
			alert(spbcTableLocalize.scannerIsActive);
			return;
		}

		var self = jQuery(this);
		var allowed_bulk_actions = ['approve','disapprove','send','check_analysis_status','approve_page','disapprove_page','cure'];
		var action = self.siblings('select').children()[self.siblings('select').first()[0].selectedIndex].value;
		console.log(self);
		if( allowed_bulk_actions.indexOf( action ) !== -1 ){

			if(!confirm(spbcTable.warning_bulk))
				return;

			console.log('spbc_tbl__bulk_action_all__listen click');
			var data = {
				action: 'spbc_tbl-action--bulk',
				add_action: action,
				status: self.parents('.tbl-root').attr('type'),
			};
			var params = {
				button: this,
				spinner: self.children('.tbl-preloader--small'),
				callback: function(out) {
					spbc_reload_accordion();
					if ( action === 'check_analysis_status' && typeof out !== undefined){
						let html = '<p> Analysis status updated.'
							+ ' Total: ' +  out.counters.total
							+ ', updated: ' +  out.counters.updated
							+ ', skipped: ' +  out.counters.skipped
							+ ', failed: ' + out.counters.failed
							+ ', queued: ' +  out.counters.queued
							+ '</p>';
						spbcModal.open().put( html );
					}
					if ( action === 'send' && typeof out !== undefined){
						let html = '<p> Files have been sent: '
							+ out.files_sent_counter
							+ '</p>';
						spbcModal.open().put( html );
					}
				},
				errorOutput: function( error_text, comment ){
					if( comment ){
						error_text = error_text + '<br>Additional information:<br>' + comment;
					}
					spbcModal.open().putError( error_text );
				},
				timeout: 60000,
			};

			spbc_sendAJAXRequest(data, params);

		}else{
			alert('This action is not supported for all files yet =(')
		}
	});

	jQuery('.tbl-bulk_actions--apply')
		.off('click')
		.on('click', function(){

		if(!spbc_bulk_action && !confirm(spbcTable.warning_bulk))
			return;

		var self = spbc_bulk_action || jQuery(this);
		spbc_bulk_action = self;
		var action = self.siblings('select').children()[self.siblings('select').first()[0].selectedIndex].value;
		if( action !== '-1' && self.parents('.tbl-root').find('.cb-select').is(':checked') ){
			self.children('.tbl-preloader--small').show();
			if(self.parents('.tbl-root').find('.cb-select:checked').first().parents('tr').find('.tbl-row_action--'+action)[0]){
				self.parents('.tbl-root').find('.cb-select:checked').first().parents('tr').find('.tbl-row_action--'+action).click();
				self.parents('.tbl-root').find('.cb-select:checked').first().prop('checked', false);
			}else{
				self.parents('.tbl-root').find('.cb-select:checked').first().prop('checked', false);
				self.click();
			}
		}else{
			self.children('.tbl-preloader--small').hide();
			spbc_bulk_action = null;
			if ( action === 'check_analysis_status' && typeof out !== undefined){
				let html = '<p> All available files are updated.' + '</p>';
				spbcModal.open().put( html );
			}
			if ( action === 'send' && typeof out !== undefined){
				let html = '<p> All available files are sent.' + '</p>';
				spbcModal.open().put( html );
			}
			setTimeout(spbc_reload_accordion, 1900);
		}
	});
}	

// TABLE ROW ACTIONS
function spbc_tbl__row_actions__listen(){
	jQuery('.tbl-row_action--ajax')
		.off('click')
		.on('click', function(){
		console.log('spbc_tbl__row_actions__listen click');
		if ( spbc_scanner.active ) {
			alert(spbcTableLocalize.scannerIsActive);
			return;
		}
		var self = jQuery(this);
		var data = {
			action: 'spbc_tbl-action--row',
			add_action: self.attr('row-action'),
			id: self.parents('.row-actions').attr('uid'),
			cols: self.parents('.row-actions').attr('cols_amount'),
			page_url: self.parent().attr('uid'),
			page_id: self.parent().attr('page_id'),
		};
		var params = {
			callback: spbc_tbl__row_actions__callback,
			errorOutput: function(msg){ spbcModal.open().putError( msg ); },
			spinner: self.parents('.row-actions').children('.tbl-preloader--tiny'),
		};
		if(!spbc_bulk_action){
			var confirmation = spbcTable['warning_'+self.attr('row-action')] || spbcTable.warning_default;
			if ( data.add_action === 'copy_file_info' || data.add_action === 'check_analysis_status' || confirm(confirmation) ) {
				spbc_sendAJAXRequest(data, params, self.parents('tr'));
			}
		}
		if(spbc_bulk_action){
			spbc_sendAJAXRequest(data, params, self.parents('tr'));
		}
	});
}

	// Callback for TABLE ROW ACTIONS
function spbc_tbl__row_actions__callback(result, data, params, obj){
	if(result.color)    {obj.css({background: result.background, color: result.color});}
	if(result.html)     {
		obj.parent().parent().parent().prepend(result.html)
		setTimeout(function(){obj.fadeOut(300);}, 1500);
		if( ! spbc_bulk_action) {
			setTimeout(spbc_reload_accordion, 1900);
		}
	}

	if (
		data.add_action === 'copy_file_info'
	) {
		if (result.success === true && result.data.file_info){
			window.prompt("Copy the file info below and send it to support@cleantalk.org: ", result.data.file_info);
		} else {
			let error_text = (typeof result.data.error !== 'undefined') ? result.data.error : 'Unknown copy_file_info error'
			spbcModal.open().putError( error_text );
		}
	}

	if(result.temp_html){
		var tmp=obj.html(); 
		obj.html(result.temp_html);
		if (result.updated_template !== undefined) {
			let updatedType = result.updated_template_type;
			let template = result.updated_template;
			let rowsInTemplate = jQuery(template).find('.wp-list-table tbody tr');
			let countRowInTemplate = rowsInTemplate.length;
			let targetTab = jQuery('[aria-controls="spbc_scan_accordion_tab_' + updatedType + '"]');

			if (targetTab.length > 0) {
				let table = jQuery('#spbc_tbl__scanner_' + updatedType);
				// Count files in header
				jQuery('.spbc_bad_type_count.' + updatedType + '_counter').text(countRowInTemplate);
				// Count rows in table
				let countExistingRows = table.find('.wp-list-table tbody tr').length;
				table.remove();
				jQuery('#spbc_scan_accordion_tab_' + updatedType).append(template);
				// Marked new rows
				jQuery(jQuery('#spbc_scan_accordion_tab_' + updatedType).find('.wp-list-table tbody tr')).each(function (index, element) {
					if (++index > countExistingRows) {
						jQuery(element).css('outline', '1px solid green');
					}
				});
				targetTab.click();
			} else {
				if (updatedType === 'analysis_log') {
					let tabHeaderTemplate = '<h3 class="ui-accordion-header ui-corner-top ui-state-default ui-accordion-icons ui-accordion-header-collapsed ui-corner-all" role="tab" id="ui-id-2" aria-controls="spbc_scan_accordion_tab_analysis_log" aria-selected="false" aria-expanded="false" tabindex="-1"><span class="ui-accordion-header-icon ui-icon ui-icon-triangle-1-e"></span><a href="#">Analysis Log (<span class="spbc_bad_type_count analysis_log_counter">' + countRowInTemplate + '</span>)</a></h3>';
					let tabBodyTemplate = '<div id="spbc_scan_accordion_tab_analysis_log" class="ui-accordion-content ui-corner-bottom ui-helper-reset ui-widget-content" aria-labelledby="ui-id-2" role="tabpanel" aria-hidden="true" style="display: none;"><p class="spbc_hint">Files sent for analysis.</p><div id="spbc_tbl__scanner_analysis_log" type="analysis_log" class="tbl-root">' +
						template +
						'</div>';
					jQuery('#spbc_scan_accordion_tab_critical').after(tabHeaderTemplate + tabBodyTemplate);
					targetTab.click();
				}
			}
		}
		setTimeout(function(){
			obj.html(tmp).css({background: 'inherit'}).find('.column-primary .row-actions .tbl-row_action--'+data.add_action).remove();
			spbc_tbl__bulk_actions__listen();
			spbc_tbl__row_actions__listen();
			spbcStartShowHide();
		},5000);
	}
	if(spbc_bulk_action)
		spbc_bulk_action.click();
}

// TABLE PAGINATION ACTIONS
function spbc_tbl__pagination__listen(){
	var data = {action: 'spbc_tbl-pagination',};
	var params = {callback: spbc_tbl__pagination__callback, notJson: true,};
	jQuery('.tbl-pagination--button').on('click', function(){
		jQuery(this).parents('.tbl-root').find('.tbl-pagination--button').attr('disabled', 'disabled');
	});
	jQuery('.tbl-pagination--go').on('click', function(){
		var self = jQuery(this);
		var obj = self.parents('.tbl-root');
		data.page = self.siblings('.tbl-pagination--curr_page').val();
		data.type = obj.attr('type');
		params.spinner = self.siblings('.tbl-preloader--small');
		spbc_sendAJAXRequest(data, params, obj);
	});
	jQuery('.tbl-pagination--prev').on('click', function(){
		var self = jQuery(this);
		var obj = self.parents('.tbl-root');
		data.page = self.parents('.tbl-pagination--wrapper').attr('prev_page');
		data.type = obj.attr('type');
		params.spinner = self.siblings('.tbl-preloader--small');
		spbc_sendAJAXRequest(data, params, obj);
	});
	jQuery('.tbl-pagination--next').on('click', function(){
		var self = jQuery(this);
		var obj = self.parents('.tbl-root');
		data.page = self.parents('.tbl-pagination--wrapper').attr('next_page');
		data.type = obj.attr('type');
		params.spinner = self.siblings('.tbl-preloader--small');
		spbc_sendAJAXRequest(data, params, obj);
	});
	jQuery('.tbl-pagination--end').on('click', function(){
		var self = jQuery(this);
		var obj = self.parents('.tbl-root');
		data.page = self.parents('.tbl-pagination--wrapper').attr('last_page');
		data.type = obj.attr('type');
		params.spinner = self.siblings('.tbl-preloader--small');
		spbc_sendAJAXRequest(data, params, obj);
	});
	jQuery('.tbl-pagination--start').on('click', function(){
		var self = jQuery(this);
		var obj = self.parents('.tbl-root');
		data.page = 1;
		data.type = obj.attr('type');
		params.spinner = self.siblings('.tbl-preloader--small');
		spbc_sendAJAXRequest(data, params, obj);
	});
}

function spbc_scanner__switch_table(obj, table){
	var obj = jQuery(obj);
	console.log(obj.parents('.row-actions').attr('uid'));
	var data = {action: 'spbc_tbl-switch', type: table, domain: obj.parents('.row-actions').attr('uid'),};
	var params = {callback: spbc_tbl__pagination__callback, notJson: true,};
	spbc_sendAJAXRequest(data, params, obj.parents('.tbl-root'));
}

	// Callback for TABLE PAGINATION ACTIONS
function spbc_tbl__pagination__callback(result, data, params, obj){
	
	jQuery(obj)
		.html(result)
		.find('.tbl-pagination--button').removeAttr('disabled');
	spbc_tbl__bulk_actions__listen();
	spbc_tbl__row_actions__listen();
	spbc_tbl__pagination__listen();
	spbc_tbl__sort__listen();
	spbcStartShowHide();
}

// TABLE SORT ACTIONS
function spbc_tbl__sort__listen(){
	
	var params = {callback: spbc_tbl__sort__callback, notJson: true,};
	jQuery('.tbl-column-sortable').on('click', function(){
		var self = jQuery(this);
		var obj = self.parents('.tbl-root');
		var data = {
			action:   'spbc_tbl-sort',
			order_by: self.attr('id'),
			order:    self.attr('sort_direction'),
			type:     obj.attr('type'),
		};
		spbc_sendAJAXRequest(data, params, obj);
	});
}

	// Callback for TABLE SORT ACTIONS
function spbc_tbl__sort__callback(result, data, params, obj){
	jQuery(obj).html(result);
	spbc_tbl__bulk_actions__listen();
	spbc_tbl__row_actions__listen();
	spbc_tbl__pagination__listen();
	spbc_tbl__sort__listen();
}

jQuery(document).ready(function(){
	
	// Table. Row actions handler
	spbc_tbl__bulk_actions__listen();
	spbc_tbl__row_actions__listen();
	spbc_tbl__pagination__listen();
	spbc_tbl__sort__listen();
});